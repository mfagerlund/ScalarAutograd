{
  "metadata": {
    "toolPackage": "@microsoft/api-extractor",
    "toolVersion": "7.52.15",
    "schemaVersion": 1011,
    "oldestForwardsCompatibleVersion": 1001,
    "tsdocConfig": {
      "$schema": "https://developer.microsoft.com/json-schemas/tsdoc/v0/tsdoc.schema.json",
      "noStandardTags": true,
      "tagDefinitions": [
        {
          "tagName": "@alpha",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@beta",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@defaultValue",
          "syntaxKind": "block"
        },
        {
          "tagName": "@decorator",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@deprecated",
          "syntaxKind": "block"
        },
        {
          "tagName": "@eventProperty",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@example",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@experimental",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@inheritDoc",
          "syntaxKind": "inline"
        },
        {
          "tagName": "@internal",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@label",
          "syntaxKind": "inline"
        },
        {
          "tagName": "@link",
          "syntaxKind": "inline",
          "allowMultiple": true
        },
        {
          "tagName": "@override",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@packageDocumentation",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@param",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@privateRemarks",
          "syntaxKind": "block"
        },
        {
          "tagName": "@public",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@readonly",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@remarks",
          "syntaxKind": "block"
        },
        {
          "tagName": "@returns",
          "syntaxKind": "block"
        },
        {
          "tagName": "@sealed",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@see",
          "syntaxKind": "block"
        },
        {
          "tagName": "@throws",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@typeParam",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@virtual",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@betaDocumentation",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@internalRemarks",
          "syntaxKind": "block"
        },
        {
          "tagName": "@preapproved",
          "syntaxKind": "modifier"
        }
      ],
      "supportForTags": {
        "@alpha": true,
        "@beta": true,
        "@defaultValue": true,
        "@decorator": true,
        "@deprecated": true,
        "@eventProperty": true,
        "@example": true,
        "@experimental": true,
        "@inheritDoc": true,
        "@internal": true,
        "@label": true,
        "@link": true,
        "@override": true,
        "@packageDocumentation": true,
        "@param": true,
        "@privateRemarks": true,
        "@public": true,
        "@readonly": true,
        "@remarks": true,
        "@returns": true,
        "@sealed": true,
        "@see": true,
        "@throws": true,
        "@typeParam": true,
        "@virtual": true,
        "@betaDocumentation": true,
        "@internalRemarks": true,
        "@preapproved": true
      },
      "reportUnsupportedHtmlElements": false
    }
  },
  "kind": "Package",
  "canonicalReference": "scalar-autograd!",
  "docComment": "",
  "name": "scalar-autograd",
  "preserveMemberOrder": false,
  "members": [
    {
      "kind": "EntryPoint",
      "canonicalReference": "scalar-autograd!",
      "name": "",
      "preserveMemberOrder": false,
      "members": [
        {
          "kind": "Class",
          "canonicalReference": "scalar-autograd!Adam:class",
          "docComment": "/**\n * Adam optimizer, supports decoupled weight decay and gradient clipping.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class Adam extends "
            },
            {
              "kind": "Reference",
              "text": "Optimizer",
              "canonicalReference": "scalar-autograd!Optimizer:class"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "dist/Optimizers.d.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "Adam",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "scalar-autograd!Adam:constructor(1)",
              "docComment": "/**\n * Constructs an Adam optimizer.\n *\n * @param trainables - Array of Value parameters to optimize.\n *\n * @param opts - Optional parameters (learningRate, weightDecay, gradientClip, beta1, beta2, epsilon).\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(trainables: "
                },
                {
                  "kind": "Reference",
                  "text": "Value",
                  "canonicalReference": "scalar-autograd!Value:class"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ", opts?: "
                },
                {
                  "kind": "Reference",
                  "text": "AdamOptions",
                  "canonicalReference": "scalar-autograd!AdamOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "trainables",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "opts",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  },
                  "isOptional": true
                }
              ]
            },
            {
              "kind": "Method",
              "canonicalReference": "scalar-autograd!Adam#resetStateFor:member(1)",
              "docComment": "/**\n * Resets optimizer state (momentum and velocity) for a specific trainable.\n *\n * @param trainable - The Value parameter to reset state for.\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "resetStateFor(trainable: "
                },
                {
                  "kind": "Reference",
                  "text": "Value",
                  "canonicalReference": "scalar-autograd!Value:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "trainable",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "resetStateFor"
            },
            {
              "kind": "Method",
              "canonicalReference": "scalar-autograd!Adam#step:member(1)",
              "docComment": "/**\n * Performs a parameter update using Adam optimization.\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "step(): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "step"
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "scalar-autograd!AdamOptions:interface",
          "docComment": "/**\n * Adam and AdamW optimizer parameters. Extends OptimizerOptions.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface AdamOptions extends "
            },
            {
              "kind": "Reference",
              "text": "OptimizerOptions",
              "canonicalReference": "scalar-autograd!OptimizerOptions:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "dist/Optimizers.d.ts",
          "releaseTag": "Public",
          "name": "AdamOptions",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "scalar-autograd!AdamOptions#beta1:member",
              "docComment": "/**\n * Exponential decay rate for 1st moment (default 0.9).\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "beta1?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "beta1",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "scalar-autograd!AdamOptions#beta2:member",
              "docComment": "/**\n * Exponential decay rate for 2nd moment (default 0.999).\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "beta2?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "beta2",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "scalar-autograd!AdamOptions#epsilon:member",
              "docComment": "/**\n * Numerical stability fudge factor (default 1e-8).\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "epsilon?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "epsilon",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 2
            }
          ]
        },
        {
          "kind": "Class",
          "canonicalReference": "scalar-autograd!AdamW:class",
          "docComment": "/**\n * AdamW optimizer, supports decoupled weight decay and gradient clipping (same options as Adam).\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class AdamW extends "
            },
            {
              "kind": "Reference",
              "text": "Optimizer",
              "canonicalReference": "scalar-autograd!Optimizer:class"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "dist/Optimizers.d.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "AdamW",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "scalar-autograd!AdamW:constructor(1)",
              "docComment": "/**\n * Constructs an AdamW optimizer.\n *\n * @param trainables - Array of Value parameters to optimize.\n *\n * @param opts - Optional parameters (learningRate, weightDecay, gradientClip, beta1, beta2, epsilon).\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(trainables: "
                },
                {
                  "kind": "Reference",
                  "text": "Value",
                  "canonicalReference": "scalar-autograd!Value:class"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ", opts?: "
                },
                {
                  "kind": "Reference",
                  "text": "AdamOptions",
                  "canonicalReference": "scalar-autograd!AdamOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "trainables",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "opts",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  },
                  "isOptional": true
                }
              ]
            },
            {
              "kind": "Method",
              "canonicalReference": "scalar-autograd!AdamW#resetStateFor:member(1)",
              "docComment": "/**\n * Resets optimizer state (momentum and velocity) for a specific trainable.\n *\n * @param trainable - The Value parameter to reset state for.\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "resetStateFor(trainable: "
                },
                {
                  "kind": "Reference",
                  "text": "Value",
                  "canonicalReference": "scalar-autograd!Value:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "trainable",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "resetStateFor"
            },
            {
              "kind": "Method",
              "canonicalReference": "scalar-autograd!AdamW#step:member(1)",
              "docComment": "/**\n * Performs a parameter update using AdamW optimization (decoupled weight decay).\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "step(): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "step"
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "scalar-autograd!BackwardFn:type",
          "docComment": "/**\n * Function type for backward pass computations in automatic differentiation.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type BackwardFn = "
            },
            {
              "kind": "Content",
              "text": "() => void"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "dist/Value.d.ts",
          "releaseTag": "Public",
          "name": "BackwardFn",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Class",
          "canonicalReference": "scalar-autograd!Losses:class",
          "docComment": "/**\n * Collection of loss functions for training neural networks and optimization. All methods return a scalar Value representing the loss.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class Losses "
            }
          ],
          "fileUrlPath": "dist/Losses.d.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "Losses",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Method",
              "canonicalReference": "scalar-autograd!Losses.binaryCrossEntropy:member(1)",
              "docComment": "/**\n * Computes binary cross-entropy loss between predicted outputs and targets (after sigmoid).\n *\n * @param outputs - Array of Value predictions (expected in (0,1)).\n *\n * @param targets - Array of Value targets (typically 0 or 1).\n *\n * @returns Binary cross-entropy loss as a Value.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static binaryCrossEntropy(outputs: "
                },
                {
                  "kind": "Reference",
                  "text": "Value",
                  "canonicalReference": "scalar-autograd!Value:class"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ", targets: "
                },
                {
                  "kind": "Reference",
                  "text": "Value",
                  "canonicalReference": "scalar-autograd!Value:class"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Value",
                  "canonicalReference": "scalar-autograd!Value:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "outputs",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "targets",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 6
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "binaryCrossEntropy"
            },
            {
              "kind": "Method",
              "canonicalReference": "scalar-autograd!Losses.categoricalCrossEntropy:member(1)",
              "docComment": "/**\n * Computes categorical cross-entropy loss between outputs (logits) and integer target classes.\n *\n * @param outputs - Array of Value logits for each class.\n *\n * @param targets - Array of integer class indices (0-based, one per sample).\n *\n * @returns Categorical cross-entropy loss as a Value.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static categoricalCrossEntropy(outputs: "
                },
                {
                  "kind": "Reference",
                  "text": "Value",
                  "canonicalReference": "scalar-autograd!Value:class"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ", targets: "
                },
                {
                  "kind": "Content",
                  "text": "number[]"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Value",
                  "canonicalReference": "scalar-autograd!Value:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "outputs",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "targets",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "categoricalCrossEntropy"
            },
            {
              "kind": "Property",
              "canonicalReference": "scalar-autograd!Losses.EPS:member",
              "docComment": "/**\n * Small epsilon value for numerical stability in logarithmic computations.\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static EPS: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "EPS",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": true,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "scalar-autograd!Losses.huber:member(1)",
              "docComment": "/**\n * Computes Huber loss between outputs and targets. Combines quadratic loss for small residuals and linear loss for large residuals.\n *\n * @param outputs - Array of Value predictions.\n *\n * @param targets - Array of Value targets.\n *\n * @param delta - Threshold at which to switch from quadratic to linear (default: 1.0).\n *\n * @returns Huber loss as a Value.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static huber(outputs: "
                },
                {
                  "kind": "Reference",
                  "text": "Value",
                  "canonicalReference": "scalar-autograd!Value:class"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ", targets: "
                },
                {
                  "kind": "Reference",
                  "text": "Value",
                  "canonicalReference": "scalar-autograd!Value:class"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ", delta?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Value",
                  "canonicalReference": "scalar-autograd!Value:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 9,
                "endIndex": 10
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "outputs",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "targets",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 6
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "delta",
                  "parameterTypeTokenRange": {
                    "startIndex": 7,
                    "endIndex": 8
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "huber"
            },
            {
              "kind": "Method",
              "canonicalReference": "scalar-autograd!Losses.mae:member(1)",
              "docComment": "/**\n * Computes mean absolute error (MAE) loss between outputs and targets.\n *\n * @param outputs - Array of Value predictions.\n *\n * @param targets - Array of Value targets.\n *\n * @returns Mean absolute error as a Value.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static mae(outputs: "
                },
                {
                  "kind": "Reference",
                  "text": "Value",
                  "canonicalReference": "scalar-autograd!Value:class"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ", targets: "
                },
                {
                  "kind": "Reference",
                  "text": "Value",
                  "canonicalReference": "scalar-autograd!Value:class"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Value",
                  "canonicalReference": "scalar-autograd!Value:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "outputs",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "targets",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 6
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "mae"
            },
            {
              "kind": "Method",
              "canonicalReference": "scalar-autograd!Losses.mse:member(1)",
              "docComment": "/**\n * Computes mean squared error (MSE) loss between outputs and targets.\n *\n * @param outputs - Array of Value predictions.\n *\n * @param targets - Array of Value targets.\n *\n * @returns Mean squared error as a Value.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static mse(outputs: "
                },
                {
                  "kind": "Reference",
                  "text": "Value",
                  "canonicalReference": "scalar-autograd!Value:class"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ", targets: "
                },
                {
                  "kind": "Reference",
                  "text": "Value",
                  "canonicalReference": "scalar-autograd!Value:class"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Value",
                  "canonicalReference": "scalar-autograd!Value:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "outputs",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "targets",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 6
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "mse"
            },
            {
              "kind": "Method",
              "canonicalReference": "scalar-autograd!Losses.tukey:member(1)",
              "docComment": "/**\n * Computes Tukey loss between outputs and targets. This robust loss function saturates for large residuals.\n *\n * @param outputs - Array of Value predictions.\n *\n * @param targets - Array of Value targets.\n *\n * @param c - Threshold constant (typically 4.685).\n *\n * @returns Tukey loss as a Value.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static tukey(outputs: "
                },
                {
                  "kind": "Reference",
                  "text": "Value",
                  "canonicalReference": "scalar-autograd!Value:class"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ", targets: "
                },
                {
                  "kind": "Reference",
                  "text": "Value",
                  "canonicalReference": "scalar-autograd!Value:class"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ", c?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Value",
                  "canonicalReference": "scalar-autograd!Value:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 9,
                "endIndex": 10
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "outputs",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "targets",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 6
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "c",
                  "parameterTypeTokenRange": {
                    "startIndex": 7,
                    "endIndex": 8
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "tukey"
            }
          ],
          "implementsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "scalar-autograd!NonlinearLeastSquaresOptions:interface",
          "docComment": "/**\n * Configuration options for nonlinear least squares solver.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface NonlinearLeastSquaresOptions "
            }
          ],
          "fileUrlPath": "dist/NonlinearLeastSquares.d.ts",
          "releaseTag": "Public",
          "name": "NonlinearLeastSquaresOptions",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "scalar-autograd!NonlinearLeastSquaresOptions#adaptiveDamping:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "adaptiveDamping?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "adaptiveDamping",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "scalar-autograd!NonlinearLeastSquaresOptions#costTolerance:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "costTolerance?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "costTolerance",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "scalar-autograd!NonlinearLeastSquaresOptions#dampingDecreaseFactor:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "dampingDecreaseFactor?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "dampingDecreaseFactor",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "scalar-autograd!NonlinearLeastSquaresOptions#dampingIncreaseFactor:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "dampingIncreaseFactor?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "dampingIncreaseFactor",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "scalar-autograd!NonlinearLeastSquaresOptions#gradientTolerance:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "gradientTolerance?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "gradientTolerance",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "scalar-autograd!NonlinearLeastSquaresOptions#initialDamping:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "initialDamping?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "initialDamping",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "scalar-autograd!NonlinearLeastSquaresOptions#lineSearchSteps:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "lineSearchSteps?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "lineSearchSteps",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "scalar-autograd!NonlinearLeastSquaresOptions#maxInnerIterations:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "maxInnerIterations?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "maxInnerIterations",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "scalar-autograd!NonlinearLeastSquaresOptions#maxIterations:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "maxIterations?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "maxIterations",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "scalar-autograd!NonlinearLeastSquaresOptions#paramTolerance:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "paramTolerance?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "paramTolerance",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "scalar-autograd!NonlinearLeastSquaresOptions#trustRegionRadius:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "trustRegionRadius?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "trustRegionRadius",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "scalar-autograd!NonlinearLeastSquaresOptions#useQR:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "useQR?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "useQR",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "scalar-autograd!NonlinearLeastSquaresOptions#verbose:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "verbose?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "verbose",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "scalar-autograd!NonlinearLeastSquaresResult:interface",
          "docComment": "/**\n * Result object returned by nonlinear least squares solver.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface NonlinearLeastSquaresResult "
            }
          ],
          "fileUrlPath": "dist/NonlinearLeastSquares.d.ts",
          "releaseTag": "Public",
          "name": "NonlinearLeastSquaresResult",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "scalar-autograd!NonlinearLeastSquaresResult#computationTime:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "computationTime: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "computationTime",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "scalar-autograd!NonlinearLeastSquaresResult#convergenceReason:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "convergenceReason: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "convergenceReason",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "scalar-autograd!NonlinearLeastSquaresResult#finalCost:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "finalCost: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "finalCost",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "scalar-autograd!NonlinearLeastSquaresResult#iterations:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "iterations: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "iterations",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "scalar-autograd!NonlinearLeastSquaresResult#success:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "success: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "success",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "scalar-autograd!Optimizer:class",
          "docComment": "/**\n * Abstract base class for all optimizers. Ensures only requiresGrad parameters are optimized.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare abstract class Optimizer "
            }
          ],
          "fileUrlPath": "dist/Optimizers.d.ts",
          "releaseTag": "Public",
          "isAbstract": true,
          "name": "Optimizer",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "scalar-autograd!Optimizer:constructor(1)",
              "docComment": "/**\n * Constructs an Optimizer.\n *\n * @param trainables - Array of Value parameters to optimize.\n *\n * @param learningRate - Learning rate for updates.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(trainables: "
                },
                {
                  "kind": "Reference",
                  "text": "Value",
                  "canonicalReference": "scalar-autograd!Value:class"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ", learningRate: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "trainables",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "learningRate",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  },
                  "isOptional": false
                }
              ]
            },
            {
              "kind": "Method",
              "canonicalReference": "scalar-autograd!Optimizer#clipGradients:member(1)",
              "docComment": "/**\n * Clips global norm of gradients as regularization.\n *\n * @param maxNorm - Maximum allowed norm for gradients.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "clipGradients(maxNorm: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "maxNorm",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "clipGradients"
            },
            {
              "kind": "Property",
              "canonicalReference": "scalar-autograd!Optimizer#learningRate:member",
              "docComment": "/**\n * Learning rate for parameter updates.\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "learningRate: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "learningRate",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "scalar-autograd!Optimizer#resetStateFor:member(1)",
              "docComment": "/**\n * Resets optimizer state for a specific trainable parameter.\n *\n * @param trainable - The Value parameter to reset state for.\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "abstract resetStateFor(trainable: "
                },
                {
                  "kind": "Reference",
                  "text": "Value",
                  "canonicalReference": "scalar-autograd!Value:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "trainable",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": true,
              "name": "resetStateFor"
            },
            {
              "kind": "Method",
              "canonicalReference": "scalar-autograd!Optimizer#step:member(1)",
              "docComment": "/**\n * Performs a parameter update step.\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "abstract step(): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": true,
              "name": "step"
            },
            {
              "kind": "Property",
              "canonicalReference": "scalar-autograd!Optimizer#trainables:member",
              "docComment": "/**\n * Array of trainable Value parameters filtered to only those requiring gradients.\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "protected trainables: "
                },
                {
                  "kind": "Reference",
                  "text": "Value",
                  "canonicalReference": "scalar-autograd!Value:class"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "trainables",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": true,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "scalar-autograd!Optimizer#zeroGrad:member(1)",
              "docComment": "/**\n * Sets grads of all trainables to zero.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "zeroGrad(): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "zeroGrad"
            }
          ],
          "implementsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "scalar-autograd!OptimizerOptions:interface",
          "docComment": "/**\n * Optional arguments for basic optimizers.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface OptimizerOptions "
            }
          ],
          "fileUrlPath": "dist/Optimizers.d.ts",
          "releaseTag": "Public",
          "name": "OptimizerOptions",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "scalar-autograd!OptimizerOptions#gradientClip:member",
              "docComment": "/**\n * Maximum absolute value for gradient updates (default 0: no clipping).\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "gradientClip?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "gradientClip",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "scalar-autograd!OptimizerOptions#learningRate:member",
              "docComment": "/**\n * Overrides the step size for parameter updates (default varies by optimizer).\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "learningRate?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "learningRate",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "scalar-autograd!OptimizerOptions#weightDecay:member",
              "docComment": "/**\n * L2 regularization multiplier (default 0). Ignored for plain SGD.\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "weightDecay?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "weightDecay",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "scalar-autograd!SGD:class",
          "docComment": "/**\n * Stochastic Gradient Descent (SGD) optimizer. Accepts weightDecay and gradientClip for API consistency (ignored).\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class SGD extends "
            },
            {
              "kind": "Reference",
              "text": "Optimizer",
              "canonicalReference": "scalar-autograd!Optimizer:class"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "dist/Optimizers.d.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "SGD",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "scalar-autograd!SGD:constructor(1)",
              "docComment": "/**\n * Constructs an SGD optimizer.\n *\n * @param trainables - Array of Value parameters to optimize.\n *\n * @param opts - Optional parameters (learningRate, weightDecay, gradientClip).\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(trainables: "
                },
                {
                  "kind": "Reference",
                  "text": "Value",
                  "canonicalReference": "scalar-autograd!Value:class"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ", opts?: "
                },
                {
                  "kind": "Reference",
                  "text": "OptimizerOptions",
                  "canonicalReference": "scalar-autograd!OptimizerOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "trainables",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "opts",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  },
                  "isOptional": true
                }
              ]
            },
            {
              "kind": "Method",
              "canonicalReference": "scalar-autograd!SGD#resetStateFor:member(1)",
              "docComment": "/**\n * Resets optimizer state for a trainable (no-op for SGD).\n *\n * @param trainable - The Value parameter to reset state for.\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "resetStateFor(trainable: "
                },
                {
                  "kind": "Reference",
                  "text": "Value",
                  "canonicalReference": "scalar-autograd!Value:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "trainable",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "resetStateFor"
            },
            {
              "kind": "Method",
              "canonicalReference": "scalar-autograd!SGD#step:member(1)",
              "docComment": "/**\n * Performs a parameter update using standard SGD.\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "step(): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "step"
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "scalar-autograd!V:class",
          "docComment": "/**\n * Static factory and operation methods for Value objects. Provides functional-style API for creating and manipulating Values.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class V "
            }
          ],
          "fileUrlPath": "dist/V.d.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "V",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Method",
              "canonicalReference": "scalar-autograd!V.abs:member(1)",
              "docComment": "/**\n * Absolute value operation.\n *\n * @param a - Input value\n *\n * @returns New Value with absolute value\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static abs(a: "
                },
                {
                  "kind": "Reference",
                  "text": "Value",
                  "canonicalReference": "scalar-autograd!Value:class"
                },
                {
                  "kind": "Content",
                  "text": " | number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Value",
                  "canonicalReference": "scalar-autograd!Value:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "a",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "abs"
            },
            {
              "kind": "Method",
              "canonicalReference": "scalar-autograd!V.acos:member(1)",
              "docComment": "/**\n * Arccosine function.\n *\n * @param x - Input value\n *\n * @returns New Value with acos(x)\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static acos(x: "
                },
                {
                  "kind": "Reference",
                  "text": "Value",
                  "canonicalReference": "scalar-autograd!Value:class"
                },
                {
                  "kind": "Content",
                  "text": " | number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Value",
                  "canonicalReference": "scalar-autograd!Value:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "x",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "acos"
            },
            {
              "kind": "Method",
              "canonicalReference": "scalar-autograd!V.add:member(1)",
              "docComment": "/**\n * Addition operation.\n *\n * @param a - First operand\n *\n * @param b - Second operand\n *\n * @returns New Value with sum\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static add(a: "
                },
                {
                  "kind": "Reference",
                  "text": "Value",
                  "canonicalReference": "scalar-autograd!Value:class"
                },
                {
                  "kind": "Content",
                  "text": " | number"
                },
                {
                  "kind": "Content",
                  "text": ", b: "
                },
                {
                  "kind": "Reference",
                  "text": "Value",
                  "canonicalReference": "scalar-autograd!Value:class"
                },
                {
                  "kind": "Content",
                  "text": " | number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Value",
                  "canonicalReference": "scalar-autograd!Value:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "a",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "b",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 6
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "add"
            },
            {
              "kind": "Method",
              "canonicalReference": "scalar-autograd!V.asin:member(1)",
              "docComment": "/**\n * Arcsine function.\n *\n * @param x - Input value\n *\n * @returns New Value with asin(x)\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static asin(x: "
                },
                {
                  "kind": "Reference",
                  "text": "Value",
                  "canonicalReference": "scalar-autograd!Value:class"
                },
                {
                  "kind": "Content",
                  "text": " | number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Value",
                  "canonicalReference": "scalar-autograd!Value:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "x",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "asin"
            },
            {
              "kind": "Method",
              "canonicalReference": "scalar-autograd!V.atan:member(1)",
              "docComment": "/**\n * Arctangent function.\n *\n * @param x - Input value\n *\n * @returns New Value with atan(x)\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static atan(x: "
                },
                {
                  "kind": "Reference",
                  "text": "Value",
                  "canonicalReference": "scalar-autograd!Value:class"
                },
                {
                  "kind": "Content",
                  "text": " | number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Value",
                  "canonicalReference": "scalar-autograd!Value:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "x",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "atan"
            },
            {
              "kind": "Method",
              "canonicalReference": "scalar-autograd!V.C:member(1)",
              "docComment": "/**\n * Creates a constant Value (non-differentiable).\n *\n * @param value - The numeric value\n *\n * @param label - Optional label for the value\n *\n * @returns New constant Value\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static C(value: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", label?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Value",
                  "canonicalReference": "scalar-autograd!Value:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "value",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "label",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "C"
            },
            {
              "kind": "Method",
              "canonicalReference": "scalar-autograd!V.ceil:member(1)",
              "docComment": "/**\n * Ceiling function.\n *\n * @param a - Input value\n *\n * @returns New Value with ceiling\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static ceil(a: "
                },
                {
                  "kind": "Reference",
                  "text": "Value",
                  "canonicalReference": "scalar-autograd!Value:class"
                },
                {
                  "kind": "Content",
                  "text": " | number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Value",
                  "canonicalReference": "scalar-autograd!Value:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "a",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "ceil"
            },
            {
              "kind": "Method",
              "canonicalReference": "scalar-autograd!V.clamp:member(1)",
              "docComment": "/**\n * Clamp function.\n *\n * @param a - Input value\n *\n * @param min - Minimum bound\n *\n * @param max - Maximum bound\n *\n * @returns New Value clamped between min and max\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static clamp(a: "
                },
                {
                  "kind": "Reference",
                  "text": "Value",
                  "canonicalReference": "scalar-autograd!Value:class"
                },
                {
                  "kind": "Content",
                  "text": " | number"
                },
                {
                  "kind": "Content",
                  "text": ", min: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", max: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Value",
                  "canonicalReference": "scalar-autograd!Value:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 8,
                "endIndex": 9
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "a",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "min",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "max",
                  "parameterTypeTokenRange": {
                    "startIndex": 6,
                    "endIndex": 7
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "clamp"
            },
            {
              "kind": "Method",
              "canonicalReference": "scalar-autograd!V.compileObjective:member(1)",
              "docComment": "/**\n * Compile an objective function for efficient gradient computation. Useful for L-BFGS and other gradient-based optimizers.\n *\n * @param params - Array of parameter Values\n *\n * @param objectiveFn - Function that computes scalar objective from parameters\n *\n * @returns CompiledFunctions that can be passed to lbfgs()\n *\n * @example\n * ```typescript\n * const x = V.W(1.0);\n * const y = V.W(2.0);\n * const params = [x, y];\n *\n * // Compile Rosenbrock function\n * const compiled = V.compileObjective(params, (p) => {\n *   const [x, y] = p;\n *   const a = V.sub(V.C(1), x);\n *   const b = V.sub(y, V.pow(x, 2));\n *   return V.add(V.pow(a, 2), V.mul(V.C(100), V.pow(b, 2)));\n * });\n *\n * // Use with L-BFGS\n * lbfgs(params, compiled, { verbose: true });\n * ```\n *\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static compileObjective(params: "
                },
                {
                  "kind": "Reference",
                  "text": "Value",
                  "canonicalReference": "scalar-autograd!Value:class"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ", objectiveFn: "
                },
                {
                  "kind": "Content",
                  "text": "(params: "
                },
                {
                  "kind": "Reference",
                  "text": "Value",
                  "canonicalReference": "scalar-autograd!Value:class"
                },
                {
                  "kind": "Content",
                  "text": "[]) => "
                },
                {
                  "kind": "Reference",
                  "text": "Value",
                  "canonicalReference": "scalar-autograd!Value:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "CompiledFunctions",
                  "canonicalReference": "scalar-autograd!~CompiledFunctions:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 9,
                "endIndex": 10
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "params",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "objectiveFn",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 8
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "compileObjective"
            },
            {
              "kind": "Method",
              "canonicalReference": "scalar-autograd!V.cos:member(1)",
              "docComment": "/**\n * Cosine function.\n *\n * @param x - Input value\n *\n * @returns New Value with cos(x)\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static cos(x: "
                },
                {
                  "kind": "Reference",
                  "text": "Value",
                  "canonicalReference": "scalar-autograd!Value:class"
                },
                {
                  "kind": "Content",
                  "text": " | number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Value",
                  "canonicalReference": "scalar-autograd!Value:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "x",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "cos"
            },
            {
              "kind": "Method",
              "canonicalReference": "scalar-autograd!V.cube:member(1)",
              "docComment": "/**\n * Cube function.\n *\n * @param a - Input value\n *\n * @returns New Value with a\u0000B3\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static cube(a: "
                },
                {
                  "kind": "Reference",
                  "text": "Value",
                  "canonicalReference": "scalar-autograd!Value:class"
                },
                {
                  "kind": "Content",
                  "text": " | number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Value",
                  "canonicalReference": "scalar-autograd!Value:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "a",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "cube"
            },
            {
              "kind": "Method",
              "canonicalReference": "scalar-autograd!V.div:member(1)",
              "docComment": "/**\n * Division operation.\n *\n * @param a - Dividend\n *\n * @param b - Divisor\n *\n * @param eps - Small epsilon to prevent division by zero\n *\n * @returns New Value with quotient\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static div(a: "
                },
                {
                  "kind": "Reference",
                  "text": "Value",
                  "canonicalReference": "scalar-autograd!Value:class"
                },
                {
                  "kind": "Content",
                  "text": " | number"
                },
                {
                  "kind": "Content",
                  "text": ", b: "
                },
                {
                  "kind": "Reference",
                  "text": "Value",
                  "canonicalReference": "scalar-autograd!Value:class"
                },
                {
                  "kind": "Content",
                  "text": " | number"
                },
                {
                  "kind": "Content",
                  "text": ", eps?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Value",
                  "canonicalReference": "scalar-autograd!Value:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 9,
                "endIndex": 10
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "a",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "b",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 6
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "eps",
                  "parameterTypeTokenRange": {
                    "startIndex": 7,
                    "endIndex": 8
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "div"
            },
            {
              "kind": "Method",
              "canonicalReference": "scalar-autograd!V.eq:member(1)",
              "docComment": "/**\n * Equal comparison operation.\n *\n * @param a - First operand\n *\n * @param b - Second operand\n *\n * @returns New Value with 1 if equal, 0 otherwise\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static eq(a: "
                },
                {
                  "kind": "Reference",
                  "text": "Value",
                  "canonicalReference": "scalar-autograd!Value:class"
                },
                {
                  "kind": "Content",
                  "text": " | number"
                },
                {
                  "kind": "Content",
                  "text": ", b: "
                },
                {
                  "kind": "Reference",
                  "text": "Value",
                  "canonicalReference": "scalar-autograd!Value:class"
                },
                {
                  "kind": "Content",
                  "text": " | number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Value",
                  "canonicalReference": "scalar-autograd!Value:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "a",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "b",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 6
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "eq"
            },
            {
              "kind": "Method",
              "canonicalReference": "scalar-autograd!V.exp:member(1)",
              "docComment": "/**\n * Exponential function.\n *\n * @param a - Input value\n *\n * @returns New Value with e^a\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static exp(a: "
                },
                {
                  "kind": "Reference",
                  "text": "Value",
                  "canonicalReference": "scalar-autograd!Value:class"
                },
                {
                  "kind": "Content",
                  "text": " | number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Value",
                  "canonicalReference": "scalar-autograd!Value:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "a",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "exp"
            },
            {
              "kind": "Method",
              "canonicalReference": "scalar-autograd!V.floor:member(1)",
              "docComment": "/**\n * Floor function.\n *\n * @param a - Input value\n *\n * @returns New Value with floor\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static floor(a: "
                },
                {
                  "kind": "Reference",
                  "text": "Value",
                  "canonicalReference": "scalar-autograd!Value:class"
                },
                {
                  "kind": "Content",
                  "text": " | number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Value",
                  "canonicalReference": "scalar-autograd!Value:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "a",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "floor"
            },
            {
              "kind": "Method",
              "canonicalReference": "scalar-autograd!V.gt:member(1)",
              "docComment": "/**\n * Greater than comparison operation.\n *\n * @param a - First operand\n *\n * @param b - Second operand\n *\n * @returns New Value with 1 if a > b, 0 otherwise\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static gt(a: "
                },
                {
                  "kind": "Reference",
                  "text": "Value",
                  "canonicalReference": "scalar-autograd!Value:class"
                },
                {
                  "kind": "Content",
                  "text": " | number"
                },
                {
                  "kind": "Content",
                  "text": ", b: "
                },
                {
                  "kind": "Reference",
                  "text": "Value",
                  "canonicalReference": "scalar-autograd!Value:class"
                },
                {
                  "kind": "Content",
                  "text": " | number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Value",
                  "canonicalReference": "scalar-autograd!Value:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "a",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "b",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 6
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "gt"
            },
            {
              "kind": "Method",
              "canonicalReference": "scalar-autograd!V.gte:member(1)",
              "docComment": "/**\n * Greater than or equal comparison operation.\n *\n * @param a - First operand\n *\n * @param b - Second operand\n *\n * @returns New Value with 1 if a >= b, 0 otherwise\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static gte(a: "
                },
                {
                  "kind": "Reference",
                  "text": "Value",
                  "canonicalReference": "scalar-autograd!Value:class"
                },
                {
                  "kind": "Content",
                  "text": " | number"
                },
                {
                  "kind": "Content",
                  "text": ", b: "
                },
                {
                  "kind": "Reference",
                  "text": "Value",
                  "canonicalReference": "scalar-autograd!Value:class"
                },
                {
                  "kind": "Content",
                  "text": " | number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Value",
                  "canonicalReference": "scalar-autograd!Value:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "a",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "b",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 6
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "gte"
            },
            {
              "kind": "Method",
              "canonicalReference": "scalar-autograd!V.ifThenElse:member(1)",
              "docComment": "/**\n * Conditional branching operation (if-then-else). Evaluates condition and returns thenVal if cond is truthy, otherwise elseVal. Gradients flow through the selected branch.\n *\n * @param cond - Condition value (truthy if non-zero)\n *\n * @param thenVal - Value returned if condition is true\n *\n * @param elseVal - Value returned if condition is false\n *\n * @returns New Value with the selected branch\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static ifThenElse(cond: "
                },
                {
                  "kind": "Reference",
                  "text": "Value",
                  "canonicalReference": "scalar-autograd!Value:class"
                },
                {
                  "kind": "Content",
                  "text": " | number"
                },
                {
                  "kind": "Content",
                  "text": ", thenVal: "
                },
                {
                  "kind": "Reference",
                  "text": "Value",
                  "canonicalReference": "scalar-autograd!Value:class"
                },
                {
                  "kind": "Content",
                  "text": " | number"
                },
                {
                  "kind": "Content",
                  "text": ", elseVal: "
                },
                {
                  "kind": "Reference",
                  "text": "Value",
                  "canonicalReference": "scalar-autograd!Value:class"
                },
                {
                  "kind": "Content",
                  "text": " | number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Value",
                  "canonicalReference": "scalar-autograd!Value:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 10,
                "endIndex": 11
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "cond",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "thenVal",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 6
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "elseVal",
                  "parameterTypeTokenRange": {
                    "startIndex": 7,
                    "endIndex": 9
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "ifThenElse"
            },
            {
              "kind": "Method",
              "canonicalReference": "scalar-autograd!V.log:member(1)",
              "docComment": "/**\n * Natural logarithm.\n *\n * @param a - Input value\n *\n * @param eps - Small epsilon for numerical stability\n *\n * @returns New Value with ln(a)\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static log(a: "
                },
                {
                  "kind": "Reference",
                  "text": "Value",
                  "canonicalReference": "scalar-autograd!Value:class"
                },
                {
                  "kind": "Content",
                  "text": " | number"
                },
                {
                  "kind": "Content",
                  "text": ", eps?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Value",
                  "canonicalReference": "scalar-autograd!Value:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "a",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "eps",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "log"
            },
            {
              "kind": "Method",
              "canonicalReference": "scalar-autograd!V.lt:member(1)",
              "docComment": "/**\n * Less than comparison operation.\n *\n * @param a - First operand\n *\n * @param b - Second operand\n *\n * @returns New Value with 1 if a < b, 0 otherwise\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static lt(a: "
                },
                {
                  "kind": "Reference",
                  "text": "Value",
                  "canonicalReference": "scalar-autograd!Value:class"
                },
                {
                  "kind": "Content",
                  "text": " | number"
                },
                {
                  "kind": "Content",
                  "text": ", b: "
                },
                {
                  "kind": "Reference",
                  "text": "Value",
                  "canonicalReference": "scalar-autograd!Value:class"
                },
                {
                  "kind": "Content",
                  "text": " | number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Value",
                  "canonicalReference": "scalar-autograd!Value:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "a",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "b",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 6
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "lt"
            },
            {
              "kind": "Method",
              "canonicalReference": "scalar-autograd!V.lte:member(1)",
              "docComment": "/**\n * Less than or equal comparison operation.\n *\n * @param a - First operand\n *\n * @param b - Second operand\n *\n * @returns New Value with 1 if a <= b, 0 otherwise\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static lte(a: "
                },
                {
                  "kind": "Reference",
                  "text": "Value",
                  "canonicalReference": "scalar-autograd!Value:class"
                },
                {
                  "kind": "Content",
                  "text": " | number"
                },
                {
                  "kind": "Content",
                  "text": ", b: "
                },
                {
                  "kind": "Reference",
                  "text": "Value",
                  "canonicalReference": "scalar-autograd!Value:class"
                },
                {
                  "kind": "Content",
                  "text": " | number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Value",
                  "canonicalReference": "scalar-autograd!Value:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "a",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "b",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 6
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "lte"
            },
            {
              "kind": "Method",
              "canonicalReference": "scalar-autograd!V.max:member(1)",
              "docComment": "/**\n * Maximum of two values.\n *\n * @param a - First value\n *\n * @param b - Second value\n *\n * @returns New Value with maximum\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static max(a: "
                },
                {
                  "kind": "Reference",
                  "text": "Value",
                  "canonicalReference": "scalar-autograd!Value:class"
                },
                {
                  "kind": "Content",
                  "text": " | number"
                },
                {
                  "kind": "Content",
                  "text": ", b: "
                },
                {
                  "kind": "Reference",
                  "text": "Value",
                  "canonicalReference": "scalar-autograd!Value:class"
                },
                {
                  "kind": "Content",
                  "text": " | number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Value",
                  "canonicalReference": "scalar-autograd!Value:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "a",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "b",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 6
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "max"
            },
            {
              "kind": "Method",
              "canonicalReference": "scalar-autograd!V.mean:member(1)",
              "docComment": "/**\n * Mean of array of values.\n *\n * @param vals - Array of values\n *\n * @returns New Value with mean\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static mean(vals: "
                },
                {
                  "kind": "Content",
                  "text": "("
                },
                {
                  "kind": "Reference",
                  "text": "Value",
                  "canonicalReference": "scalar-autograd!Value:class"
                },
                {
                  "kind": "Content",
                  "text": " | number)[]"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Value",
                  "canonicalReference": "scalar-autograd!Value:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "vals",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "mean"
            },
            {
              "kind": "Method",
              "canonicalReference": "scalar-autograd!V.min:member(1)",
              "docComment": "/**\n * Minimum of two values.\n *\n * @param a - First value\n *\n * @param b - Second value\n *\n * @returns New Value with minimum\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static min(a: "
                },
                {
                  "kind": "Reference",
                  "text": "Value",
                  "canonicalReference": "scalar-autograd!Value:class"
                },
                {
                  "kind": "Content",
                  "text": " | number"
                },
                {
                  "kind": "Content",
                  "text": ", b: "
                },
                {
                  "kind": "Reference",
                  "text": "Value",
                  "canonicalReference": "scalar-autograd!Value:class"
                },
                {
                  "kind": "Content",
                  "text": " | number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Value",
                  "canonicalReference": "scalar-autograd!Value:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "a",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "b",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 6
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "min"
            },
            {
              "kind": "Method",
              "canonicalReference": "scalar-autograd!V.mod:member(1)",
              "docComment": "/**\n * Modulo operation.\n *\n * @param a - Dividend\n *\n * @param b - Divisor\n *\n * @returns New Value with remainder\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static mod(a: "
                },
                {
                  "kind": "Reference",
                  "text": "Value",
                  "canonicalReference": "scalar-autograd!Value:class"
                },
                {
                  "kind": "Content",
                  "text": " | number"
                },
                {
                  "kind": "Content",
                  "text": ", b: "
                },
                {
                  "kind": "Reference",
                  "text": "Value",
                  "canonicalReference": "scalar-autograd!Value:class"
                },
                {
                  "kind": "Content",
                  "text": " | number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Value",
                  "canonicalReference": "scalar-autograd!Value:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "a",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "b",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 6
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "mod"
            },
            {
              "kind": "Method",
              "canonicalReference": "scalar-autograd!V.mul:member(1)",
              "docComment": "/**\n * Multiplication operation.\n *\n * @param a - First operand\n *\n * @param b - Second operand\n *\n * @returns New Value with product\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static mul(a: "
                },
                {
                  "kind": "Reference",
                  "text": "Value",
                  "canonicalReference": "scalar-autograd!Value:class"
                },
                {
                  "kind": "Content",
                  "text": " | number"
                },
                {
                  "kind": "Content",
                  "text": ", b: "
                },
                {
                  "kind": "Reference",
                  "text": "Value",
                  "canonicalReference": "scalar-autograd!Value:class"
                },
                {
                  "kind": "Content",
                  "text": " | number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Value",
                  "canonicalReference": "scalar-autograd!Value:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "a",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "b",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 6
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "mul"
            },
            {
              "kind": "Method",
              "canonicalReference": "scalar-autograd!V.neg:member(1)",
              "docComment": "/**\n * Negation operation.\n *\n * @param a - Input value\n *\n * @returns New Value which is negation\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static neg(a: "
                },
                {
                  "kind": "Reference",
                  "text": "Value",
                  "canonicalReference": "scalar-autograd!Value:class"
                },
                {
                  "kind": "Content",
                  "text": " | number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Value",
                  "canonicalReference": "scalar-autograd!Value:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "a",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "neg"
            },
            {
              "kind": "Method",
              "canonicalReference": "scalar-autograd!V.neq:member(1)",
              "docComment": "/**\n * Not equal comparison operation.\n *\n * @param a - First operand\n *\n * @param b - Second operand\n *\n * @returns New Value with 1 if not equal, 0 otherwise\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static neq(a: "
                },
                {
                  "kind": "Reference",
                  "text": "Value",
                  "canonicalReference": "scalar-autograd!Value:class"
                },
                {
                  "kind": "Content",
                  "text": " | number"
                },
                {
                  "kind": "Content",
                  "text": ", b: "
                },
                {
                  "kind": "Reference",
                  "text": "Value",
                  "canonicalReference": "scalar-autograd!Value:class"
                },
                {
                  "kind": "Content",
                  "text": " | number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Value",
                  "canonicalReference": "scalar-autograd!Value:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "a",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "b",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 6
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "neq"
            },
            {
              "kind": "Method",
              "canonicalReference": "scalar-autograd!V.nonlinearLeastSquares:member(1)",
              "docComment": "/**\n * Nonlinear least squares solver using Levenberg-Marquardt algorithm. Minimizes sum of squared residuals using automatic differentiation.\n *\n * @param params - Array of trainable Value parameters to optimize\n *\n * @param residualFn - Function that computes residuals from current parameters\n *\n * @param options - Optional solver configuration\n *\n * @returns Result object with success status, iterations, and final cost\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static nonlinearLeastSquares(params: "
                },
                {
                  "kind": "Reference",
                  "text": "Value",
                  "canonicalReference": "scalar-autograd!Value:class"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ", residualFn: "
                },
                {
                  "kind": "Content",
                  "text": "(params: "
                },
                {
                  "kind": "Reference",
                  "text": "Value",
                  "canonicalReference": "scalar-autograd!Value:class"
                },
                {
                  "kind": "Content",
                  "text": "[]) => "
                },
                {
                  "kind": "Reference",
                  "text": "Value",
                  "canonicalReference": "scalar-autograd!Value:class"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ", options?: "
                },
                {
                  "kind": "Reference",
                  "text": "NonlinearLeastSquaresOptions",
                  "canonicalReference": "scalar-autograd!NonlinearLeastSquaresOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "NonlinearLeastSquaresResult",
                  "canonicalReference": "scalar-autograd!NonlinearLeastSquaresResult:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 12,
                "endIndex": 13
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "params",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "residualFn",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 9
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 10,
                    "endIndex": 11
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "nonlinearLeastSquares"
            },
            {
              "kind": "Method",
              "canonicalReference": "scalar-autograd!V.Param:member(1)",
              "docComment": "/**\n * Creates a parameterizable constant for JIT compilation. Unlike V.C(), these constants can be passed as function parameters to compiled functions.\n *\n * @param value - The numeric value\n *\n * @param paramName - Name for the parameter in compiled functions\n *\n * @returns New Value marked as a parameter\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static Param(value: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", paramName: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Value",
                  "canonicalReference": "scalar-autograd!Value:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "value",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "paramName",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "Param"
            },
            {
              "kind": "Method",
              "canonicalReference": "scalar-autograd!V.pow:member(1)",
              "docComment": "/**\n * Power operation with numeric exponent.\n *\n * @param a - Base\n *\n * @param exp - Exponent\n *\n * @returns New Value with result\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static pow(a: "
                },
                {
                  "kind": "Reference",
                  "text": "Value",
                  "canonicalReference": "scalar-autograd!Value:class"
                },
                {
                  "kind": "Content",
                  "text": " | number"
                },
                {
                  "kind": "Content",
                  "text": ", exp: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Value",
                  "canonicalReference": "scalar-autograd!Value:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "a",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "exp",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "pow"
            },
            {
              "kind": "Method",
              "canonicalReference": "scalar-autograd!V.powValue:member(1)",
              "docComment": "/**\n * Power operation with Value exponent.\n *\n * @param a - Base\n *\n * @param b - Exponent\n *\n * @param eps - Small epsilon for logarithm\n *\n * @returns New Value with result\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static powValue(a: "
                },
                {
                  "kind": "Reference",
                  "text": "Value",
                  "canonicalReference": "scalar-autograd!Value:class"
                },
                {
                  "kind": "Content",
                  "text": " | number"
                },
                {
                  "kind": "Content",
                  "text": ", b: "
                },
                {
                  "kind": "Reference",
                  "text": "Value",
                  "canonicalReference": "scalar-autograd!Value:class"
                },
                {
                  "kind": "Content",
                  "text": " | number"
                },
                {
                  "kind": "Content",
                  "text": ", eps?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Value",
                  "canonicalReference": "scalar-autograd!Value:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 9,
                "endIndex": 10
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "a",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "b",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 6
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "eps",
                  "parameterTypeTokenRange": {
                    "startIndex": 7,
                    "endIndex": 8
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "powValue"
            },
            {
              "kind": "Method",
              "canonicalReference": "scalar-autograd!V.reciprocal:member(1)",
              "docComment": "/**\n * Reciprocal function.\n *\n * @param a - Input value\n *\n * @param eps - Small epsilon to prevent division by zero\n *\n * @returns New Value with 1/a\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static reciprocal(a: "
                },
                {
                  "kind": "Reference",
                  "text": "Value",
                  "canonicalReference": "scalar-autograd!Value:class"
                },
                {
                  "kind": "Content",
                  "text": " | number"
                },
                {
                  "kind": "Content",
                  "text": ", eps?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Value",
                  "canonicalReference": "scalar-autograd!Value:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "a",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "eps",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "reciprocal"
            },
            {
              "kind": "Method",
              "canonicalReference": "scalar-autograd!V.relu:member(1)",
              "docComment": "/**\n * ReLU activation function.\n *\n * @param x - Input value\n *\n * @returns New Value with max(0, x)\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static relu(x: "
                },
                {
                  "kind": "Reference",
                  "text": "Value",
                  "canonicalReference": "scalar-autograd!Value:class"
                },
                {
                  "kind": "Content",
                  "text": " | number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Value",
                  "canonicalReference": "scalar-autograd!Value:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "x",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "relu"
            },
            {
              "kind": "Method",
              "canonicalReference": "scalar-autograd!V.round:member(1)",
              "docComment": "/**\n * Round function.\n *\n * @param a - Input value\n *\n * @returns New Value rounded to nearest integer\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static round(a: "
                },
                {
                  "kind": "Reference",
                  "text": "Value",
                  "canonicalReference": "scalar-autograd!Value:class"
                },
                {
                  "kind": "Content",
                  "text": " | number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Value",
                  "canonicalReference": "scalar-autograd!Value:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "a",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "round"
            },
            {
              "kind": "Method",
              "canonicalReference": "scalar-autograd!V.sigmoid:member(1)",
              "docComment": "/**\n * Sigmoid activation function.\n *\n * @param x - Input value\n *\n * @returns New Value with 1/(1 + e^(-x))\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static sigmoid(x: "
                },
                {
                  "kind": "Reference",
                  "text": "Value",
                  "canonicalReference": "scalar-autograd!Value:class"
                },
                {
                  "kind": "Content",
                  "text": " | number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Value",
                  "canonicalReference": "scalar-autograd!Value:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "x",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "sigmoid"
            },
            {
              "kind": "Method",
              "canonicalReference": "scalar-autograd!V.sign:member(1)",
              "docComment": "/**\n * Sign function.\n *\n * @param a - Input value\n *\n * @returns New Value with sign(a)\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static sign(a: "
                },
                {
                  "kind": "Reference",
                  "text": "Value",
                  "canonicalReference": "scalar-autograd!Value:class"
                },
                {
                  "kind": "Content",
                  "text": " | number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Value",
                  "canonicalReference": "scalar-autograd!Value:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "a",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "sign"
            },
            {
              "kind": "Method",
              "canonicalReference": "scalar-autograd!V.sin:member(1)",
              "docComment": "/**\n * Sine function.\n *\n * @param x - Input value\n *\n * @returns New Value with sin(x)\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static sin(x: "
                },
                {
                  "kind": "Reference",
                  "text": "Value",
                  "canonicalReference": "scalar-autograd!Value:class"
                },
                {
                  "kind": "Content",
                  "text": " | number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Value",
                  "canonicalReference": "scalar-autograd!Value:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "x",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "sin"
            },
            {
              "kind": "Method",
              "canonicalReference": "scalar-autograd!V.softplus:member(1)",
              "docComment": "/**\n * Softplus activation function.\n *\n * @param x - Input value\n *\n * @returns New Value with ln(1 + e^x)\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static softplus(x: "
                },
                {
                  "kind": "Reference",
                  "text": "Value",
                  "canonicalReference": "scalar-autograd!Value:class"
                },
                {
                  "kind": "Content",
                  "text": " | number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Value",
                  "canonicalReference": "scalar-autograd!Value:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "x",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "softplus"
            },
            {
              "kind": "Method",
              "canonicalReference": "scalar-autograd!V.sqrt:member(1)",
              "docComment": "/**\n * Square root function.\n *\n * @param a - Input value\n *\n * @returns New Value with sqrt(a)\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static sqrt(a: "
                },
                {
                  "kind": "Reference",
                  "text": "Value",
                  "canonicalReference": "scalar-autograd!Value:class"
                },
                {
                  "kind": "Content",
                  "text": " | number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Value",
                  "canonicalReference": "scalar-autograd!Value:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "a",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "sqrt"
            },
            {
              "kind": "Method",
              "canonicalReference": "scalar-autograd!V.square:member(1)",
              "docComment": "/**\n * Square function.\n *\n * @param a - Input value\n *\n * @returns New Value with a\u0000B2\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static square(a: "
                },
                {
                  "kind": "Reference",
                  "text": "Value",
                  "canonicalReference": "scalar-autograd!Value:class"
                },
                {
                  "kind": "Content",
                  "text": " | number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Value",
                  "canonicalReference": "scalar-autograd!Value:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "a",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "square"
            },
            {
              "kind": "Method",
              "canonicalReference": "scalar-autograd!V.sub:member(1)",
              "docComment": "/**\n * Subtraction operation.\n *\n * @param a - First operand\n *\n * @param b - Second operand\n *\n * @returns New Value with difference\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static sub(a: "
                },
                {
                  "kind": "Reference",
                  "text": "Value",
                  "canonicalReference": "scalar-autograd!Value:class"
                },
                {
                  "kind": "Content",
                  "text": " | number"
                },
                {
                  "kind": "Content",
                  "text": ", b: "
                },
                {
                  "kind": "Reference",
                  "text": "Value",
                  "canonicalReference": "scalar-autograd!Value:class"
                },
                {
                  "kind": "Content",
                  "text": " | number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Value",
                  "canonicalReference": "scalar-autograd!Value:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "a",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "b",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 6
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "sub"
            },
            {
              "kind": "Method",
              "canonicalReference": "scalar-autograd!V.sum:member(1)",
              "docComment": "/**\n * Sum of array of values.\n *\n * @param vals - Array of values\n *\n * @returns New Value with sum\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static sum(vals: "
                },
                {
                  "kind": "Content",
                  "text": "("
                },
                {
                  "kind": "Reference",
                  "text": "Value",
                  "canonicalReference": "scalar-autograd!Value:class"
                },
                {
                  "kind": "Content",
                  "text": " | number)[]"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Value",
                  "canonicalReference": "scalar-autograd!Value:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "vals",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "sum"
            },
            {
              "kind": "Method",
              "canonicalReference": "scalar-autograd!V.tan:member(1)",
              "docComment": "/**\n * Tangent function.\n *\n * @param x - Input value\n *\n * @returns New Value with tan(x)\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static tan(x: "
                },
                {
                  "kind": "Reference",
                  "text": "Value",
                  "canonicalReference": "scalar-autograd!Value:class"
                },
                {
                  "kind": "Content",
                  "text": " | number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Value",
                  "canonicalReference": "scalar-autograd!Value:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "x",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "tan"
            },
            {
              "kind": "Method",
              "canonicalReference": "scalar-autograd!V.tanh:member(1)",
              "docComment": "/**\n * Hyperbolic tangent function.\n *\n * @param x - Input value\n *\n * @returns New Value with tanh(x)\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static tanh(x: "
                },
                {
                  "kind": "Reference",
                  "text": "Value",
                  "canonicalReference": "scalar-autograd!Value:class"
                },
                {
                  "kind": "Content",
                  "text": " | number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Value",
                  "canonicalReference": "scalar-autograd!Value:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "x",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "tanh"
            },
            {
              "kind": "Method",
              "canonicalReference": "scalar-autograd!V.W:member(1)",
              "docComment": "/**\n * Creates a weight Value (differentiable).\n *\n * @param value - The numeric value\n *\n * @param label - Optional label for the value\n *\n * @returns New differentiable Value\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static W(value: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", label?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Value",
                  "canonicalReference": "scalar-autograd!Value:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "value",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "label",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "W"
            }
          ],
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "scalar-autograd!Value:class",
          "docComment": "/**\n * Represents a scalar value in the computational graph for automatic differentiation. Supports forward computation and reverse-mode autodiff (backpropagation).\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class Value "
            }
          ],
          "fileUrlPath": "dist/Value.d.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "Value",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "scalar-autograd!Value:constructor(1)",
              "docComment": "/**\n * Constructs a new instance of the `Value` class\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(data: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", label?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", requiresGrad?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "data",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "label",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": true
                },
                {
                  "parameterName": "requiresGrad",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": true
                }
              ]
            },
            {
              "kind": "Method",
              "canonicalReference": "scalar-autograd!Value#abs:member(1)",
              "docComment": "/**\n * Returns abs(this).\n *\n * @returns New Value with abs.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "abs(): "
                },
                {
                  "kind": "Reference",
                  "text": "Value",
                  "canonicalReference": "scalar-autograd!Value:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "abs"
            },
            {
              "kind": "Method",
              "canonicalReference": "scalar-autograd!Value#acos:member(1)",
              "docComment": "/**\n * Returns acos(this).\n *\n * @returns New Value with acos.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "acos(): "
                },
                {
                  "kind": "Reference",
                  "text": "Value",
                  "canonicalReference": "scalar-autograd!Value:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "acos"
            },
            {
              "kind": "Method",
              "canonicalReference": "scalar-autograd!Value#add:member(1)",
              "docComment": "/**\n * Adds this and other.\n *\n * @param other - Value or number to add\n *\n * @returns New Value with sum.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "add(other: "
                },
                {
                  "kind": "Reference",
                  "text": "Value",
                  "canonicalReference": "scalar-autograd!Value:class"
                },
                {
                  "kind": "Content",
                  "text": " | number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Value",
                  "canonicalReference": "scalar-autograd!Value:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "other",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "add"
            },
            {
              "kind": "Method",
              "canonicalReference": "scalar-autograd!Value#asin:member(1)",
              "docComment": "/**\n * Returns asin(this).\n *\n * @returns New Value with asin.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "asin(): "
                },
                {
                  "kind": "Reference",
                  "text": "Value",
                  "canonicalReference": "scalar-autograd!Value:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "asin"
            },
            {
              "kind": "Method",
              "canonicalReference": "scalar-autograd!Value#atan:member(1)",
              "docComment": "/**\n * Returns atan(this).\n *\n * @returns New Value with atan.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "atan(): "
                },
                {
                  "kind": "Reference",
                  "text": "Value",
                  "canonicalReference": "scalar-autograd!Value:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "atan"
            },
            {
              "kind": "Method",
              "canonicalReference": "scalar-autograd!Value#backward:member(1)",
              "docComment": "/**\n * Performs a reverse-mode autodiff backward pass from this Value.\n *\n * @param zeroGrad - If true, zeroes all grads in the graph before backward\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "backward(zeroGrad?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "zeroGrad",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "backward"
            },
            {
              "kind": "Method",
              "canonicalReference": "scalar-autograd!Value#ceil:member(1)",
              "docComment": "/**\n * Returns the ceiling of this Value.\n *\n * @returns New Value with ceil(data).\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "ceil(): "
                },
                {
                  "kind": "Reference",
                  "text": "Value",
                  "canonicalReference": "scalar-autograd!Value:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "ceil"
            },
            {
              "kind": "Method",
              "canonicalReference": "scalar-autograd!Value#clamp:member(1)",
              "docComment": "/**\n * Clamps this between min and max.\n *\n * @param min - Minimum value\n *\n * @param max - Maximum value\n *\n * @returns New clamped Value\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "clamp(min: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", max: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Value",
                  "canonicalReference": "scalar-autograd!Value:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "min",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "max",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "clamp"
            },
            {
              "kind": "Method",
              "canonicalReference": "scalar-autograd!Value#cos:member(1)",
              "docComment": "/**\n * Returns cos(this).\n *\n * @returns New Value with cos.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "cos(): "
                },
                {
                  "kind": "Reference",
                  "text": "Value",
                  "canonicalReference": "scalar-autograd!Value:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "cos"
            },
            {
              "kind": "Method",
              "canonicalReference": "scalar-autograd!Value#cube:member(1)",
              "docComment": "/**\n * Returns the cube of this Value.\n *\n * @returns New Value with cubed data.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "cube(): "
                },
                {
                  "kind": "Reference",
                  "text": "Value",
                  "canonicalReference": "scalar-autograd!Value:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "cube"
            },
            {
              "kind": "Property",
              "canonicalReference": "scalar-autograd!Value#data:member",
              "docComment": "/**\n * The numeric value stored in this node.\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "data: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "data",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "scalar-autograd!Value#div:member(1)",
              "docComment": "/**\n * Divides this by other.\n *\n * @param other - Value or number divisor\n *\n * @returns New Value with quotient.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "div(other: "
                },
                {
                  "kind": "Reference",
                  "text": "Value",
                  "canonicalReference": "scalar-autograd!Value:class"
                },
                {
                  "kind": "Content",
                  "text": " | number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Value",
                  "canonicalReference": "scalar-autograd!Value:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "other",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "div"
            },
            {
              "kind": "Method",
              "canonicalReference": "scalar-autograd!Value#eq:member(1)",
              "docComment": "/**\n * Returns Value indicating if this equals other.\n *\n * @param other - Value to compare\n *\n * @returns New Value (1 if equal, else 0)\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "eq(other: "
                },
                {
                  "kind": "Reference",
                  "text": "Value",
                  "canonicalReference": "scalar-autograd!Value:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Value",
                  "canonicalReference": "scalar-autograd!Value:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "other",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "eq"
            },
            {
              "kind": "Method",
              "canonicalReference": "scalar-autograd!Value#exp:member(1)",
              "docComment": "/**\n * Returns exp(this).\n *\n * @returns New Value with exp.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "exp(): "
                },
                {
                  "kind": "Reference",
                  "text": "Value",
                  "canonicalReference": "scalar-autograd!Value:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "exp"
            },
            {
              "kind": "Method",
              "canonicalReference": "scalar-autograd!Value#floor:member(1)",
              "docComment": "/**\n * Returns the floor of this Value.\n *\n * @returns New Value with floor(data).\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "floor(): "
                },
                {
                  "kind": "Reference",
                  "text": "Value",
                  "canonicalReference": "scalar-autograd!Value:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "floor"
            },
            {
              "kind": "Method",
              "canonicalReference": "scalar-autograd!Value#getBackwardCode:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getBackwardCode(gradVar: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", childGrads: "
                },
                {
                  "kind": "Content",
                  "text": "string[]"
                },
                {
                  "kind": "Content",
                  "text": ", childVars: "
                },
                {
                  "kind": "Content",
                  "text": "string[]"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "gradVar",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "childGrads",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "childVars",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "getBackwardCode"
            },
            {
              "kind": "Method",
              "canonicalReference": "scalar-autograd!Value#getForwardCode:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getForwardCode(childCodes: "
                },
                {
                  "kind": "Content",
                  "text": "string[]"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "childCodes",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "getForwardCode"
            },
            {
              "kind": "Property",
              "canonicalReference": "scalar-autograd!Value#grad:member",
              "docComment": "/**\n * The gradient of the output with respect to this value.\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "grad: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "grad",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "scalar-autograd!Value#gt:member(1)",
              "docComment": "/**\n * Returns Value indicating if this greater than other.\n *\n * @param other - Value to compare\n *\n * @returns New Value (1 if true, else 0)\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "gt(other: "
                },
                {
                  "kind": "Reference",
                  "text": "Value",
                  "canonicalReference": "scalar-autograd!Value:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Value",
                  "canonicalReference": "scalar-autograd!Value:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "other",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "gt"
            },
            {
              "kind": "Method",
              "canonicalReference": "scalar-autograd!Value#gte:member(1)",
              "docComment": "/**\n * Returns Value indicating if this greater than or equal to other.\n *\n * @param other - Value to compare\n *\n * @returns New Value (1 if true, else 0)\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "gte(other: "
                },
                {
                  "kind": "Reference",
                  "text": "Value",
                  "canonicalReference": "scalar-autograd!Value:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Value",
                  "canonicalReference": "scalar-autograd!Value:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "other",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "gte"
            },
            {
              "kind": "Property",
              "canonicalReference": "scalar-autograd!Value#label:member",
              "docComment": "/**\n * Optional label for debugging and visualization.\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "label: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "label",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "scalar-autograd!Value#log:member(1)",
              "docComment": "/**\n * Returns log(this).\n *\n * @returns New Value with log.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "log(): "
                },
                {
                  "kind": "Reference",
                  "text": "Value",
                  "canonicalReference": "scalar-autograd!Value:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "log"
            },
            {
              "kind": "Method",
              "canonicalReference": "scalar-autograd!Value#lt:member(1)",
              "docComment": "/**\n * Returns Value indicating if this less than other.\n *\n * @param other - Value to compare\n *\n * @returns New Value (1 if true, else 0)\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "lt(other: "
                },
                {
                  "kind": "Reference",
                  "text": "Value",
                  "canonicalReference": "scalar-autograd!Value:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Value",
                  "canonicalReference": "scalar-autograd!Value:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "other",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "lt"
            },
            {
              "kind": "Method",
              "canonicalReference": "scalar-autograd!Value#lte:member(1)",
              "docComment": "/**\n * Returns Value indicating if this less than or equal to other.\n *\n * @param other - Value to compare\n *\n * @returns New Value (1 if true, else 0)\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "lte(other: "
                },
                {
                  "kind": "Reference",
                  "text": "Value",
                  "canonicalReference": "scalar-autograd!Value:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Value",
                  "canonicalReference": "scalar-autograd!Value:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "other",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "lte"
            },
            {
              "kind": "Method",
              "canonicalReference": "scalar-autograd!Value.make:member(1)",
              "docComment": "/**\n * Internal helper to construct a Value with correct backward fn and grads.\n *\n * @param data - Output value data\n *\n * @param left - Left operand Value\n *\n * @param right - Right operand Value or null\n *\n * @param backwardFnBuilder - Function to create backward closure\n *\n * @param label - Node label for debugging\n *\n * @param op - Operation name for JIT compilation\n *\n * @returns New Value node\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static make(data: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", left: "
                },
                {
                  "kind": "Reference",
                  "text": "Value",
                  "canonicalReference": "scalar-autograd!Value:class"
                },
                {
                  "kind": "Content",
                  "text": ", right: "
                },
                {
                  "kind": "Reference",
                  "text": "Value",
                  "canonicalReference": "scalar-autograd!Value:class"
                },
                {
                  "kind": "Content",
                  "text": " | null"
                },
                {
                  "kind": "Content",
                  "text": ", backwardFnBuilder: "
                },
                {
                  "kind": "Content",
                  "text": "(out: "
                },
                {
                  "kind": "Reference",
                  "text": "Value",
                  "canonicalReference": "scalar-autograd!Value:class"
                },
                {
                  "kind": "Content",
                  "text": ") => "
                },
                {
                  "kind": "Reference",
                  "text": "BackwardFn",
                  "canonicalReference": "scalar-autograd!BackwardFn:type"
                },
                {
                  "kind": "Content",
                  "text": ", label: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", op?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Value",
                  "canonicalReference": "scalar-autograd!Value:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 17,
                "endIndex": 18
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "data",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "left",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "right",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 7
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "backwardFnBuilder",
                  "parameterTypeTokenRange": {
                    "startIndex": 8,
                    "endIndex": 12
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "label",
                  "parameterTypeTokenRange": {
                    "startIndex": 13,
                    "endIndex": 14
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "op",
                  "parameterTypeTokenRange": {
                    "startIndex": 15,
                    "endIndex": 16
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "make"
            },
            {
              "kind": "Method",
              "canonicalReference": "scalar-autograd!Value.makeNary:member(1)",
              "docComment": "/**\n * N-ary operation helper for operations with multiple inputs\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static makeNary(data: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", inputs: "
                },
                {
                  "kind": "Reference",
                  "text": "Value",
                  "canonicalReference": "scalar-autograd!Value:class"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ", backwardFnBuilder: "
                },
                {
                  "kind": "Content",
                  "text": "(out: "
                },
                {
                  "kind": "Reference",
                  "text": "Value",
                  "canonicalReference": "scalar-autograd!Value:class"
                },
                {
                  "kind": "Content",
                  "text": ") => "
                },
                {
                  "kind": "Reference",
                  "text": "BackwardFn",
                  "canonicalReference": "scalar-autograd!BackwardFn:type"
                },
                {
                  "kind": "Content",
                  "text": ", label: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", op?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Value",
                  "canonicalReference": "scalar-autograd!Value:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 15,
                "endIndex": 16
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "data",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "inputs",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 5
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "backwardFnBuilder",
                  "parameterTypeTokenRange": {
                    "startIndex": 6,
                    "endIndex": 10
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "label",
                  "parameterTypeTokenRange": {
                    "startIndex": 11,
                    "endIndex": 12
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "op",
                  "parameterTypeTokenRange": {
                    "startIndex": 13,
                    "endIndex": 14
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "makeNary"
            },
            {
              "kind": "Method",
              "canonicalReference": "scalar-autograd!Value#max:member(1)",
              "docComment": "/**\n * Returns max(this, other).\n *\n * @param other - Value to compare\n *\n * @returns New Value with max.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "max(other: "
                },
                {
                  "kind": "Reference",
                  "text": "Value",
                  "canonicalReference": "scalar-autograd!Value:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Value",
                  "canonicalReference": "scalar-autograd!Value:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "other",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "max"
            },
            {
              "kind": "Method",
              "canonicalReference": "scalar-autograd!Value.mean:member(1)",
              "docComment": "/**\n * Returns the mean of the given Values.\n *\n * @param vals - Array of Value objects\n *\n * @returns New Value holding their mean.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static mean(vals: "
                },
                {
                  "kind": "Reference",
                  "text": "Value",
                  "canonicalReference": "scalar-autograd!Value:class"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Value",
                  "canonicalReference": "scalar-autograd!Value:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "vals",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "mean"
            },
            {
              "kind": "Method",
              "canonicalReference": "scalar-autograd!Value#min:member(1)",
              "docComment": "/**\n * Returns min(this, other).\n *\n * @param other - Value to compare\n *\n * @returns New Value with min.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "min(other: "
                },
                {
                  "kind": "Reference",
                  "text": "Value",
                  "canonicalReference": "scalar-autograd!Value:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Value",
                  "canonicalReference": "scalar-autograd!Value:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "other",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "min"
            },
            {
              "kind": "Method",
              "canonicalReference": "scalar-autograd!Value#mod:member(1)",
              "docComment": "/**\n * Returns this modulo other.\n *\n * @param other - Divisor Value\n *\n * @returns New Value with modulo.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "mod(other: "
                },
                {
                  "kind": "Reference",
                  "text": "Value",
                  "canonicalReference": "scalar-autograd!Value:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Value",
                  "canonicalReference": "scalar-autograd!Value:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "other",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "mod"
            },
            {
              "kind": "Method",
              "canonicalReference": "scalar-autograd!Value#mul:member(1)",
              "docComment": "/**\n * Multiplies this and other.\n *\n * @param other - Value or number to multiply\n *\n * @returns New Value with product.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "mul(other: "
                },
                {
                  "kind": "Reference",
                  "text": "Value",
                  "canonicalReference": "scalar-autograd!Value:class"
                },
                {
                  "kind": "Content",
                  "text": " | number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Value",
                  "canonicalReference": "scalar-autograd!Value:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "other",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "mul"
            },
            {
              "kind": "Method",
              "canonicalReference": "scalar-autograd!Value#neg:member(1)",
              "docComment": "/**\n * Returns the negation (-this) Value.\n *\n * @returns New Value which is the negation.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "neg(): "
                },
                {
                  "kind": "Reference",
                  "text": "Value",
                  "canonicalReference": "scalar-autograd!Value:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "neg"
            },
            {
              "kind": "Method",
              "canonicalReference": "scalar-autograd!Value#neq:member(1)",
              "docComment": "/**\n * Returns Value indicating if this not equals other.\n *\n * @param other - Value to compare\n *\n * @returns New Value (1 if not equal, else 0)\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "neq(other: "
                },
                {
                  "kind": "Reference",
                  "text": "Value",
                  "canonicalReference": "scalar-autograd!Value:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Value",
                  "canonicalReference": "scalar-autograd!Value:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "other",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "neq"
            },
            {
              "kind": "Property",
              "canonicalReference": "scalar-autograd!Value.no_grad_mode:member",
              "docComment": "/**\n * Global flag to disable gradient tracking. Use Value.withNoGrad() instead of setting directly.\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static no_grad_mode: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "no_grad_mode",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": true,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "scalar-autograd!Value#pow:member(1)",
              "docComment": "/**\n * Raises this to the power exp.\n *\n * @param exp - Exponent\n *\n * @returns New Value with pow(this, exp)\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "pow(exp: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Value",
                  "canonicalReference": "scalar-autograd!Value:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "exp",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "pow"
            },
            {
              "kind": "Method",
              "canonicalReference": "scalar-autograd!Value#powValue:member(1)",
              "docComment": "/**\n * Raises this to a dynamic Value (other).\n *\n * @param other - Exponent Value or number\n *\n * @returns New Value with pow(this, other)\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "powValue(other: "
                },
                {
                  "kind": "Reference",
                  "text": "Value",
                  "canonicalReference": "scalar-autograd!Value:class"
                },
                {
                  "kind": "Content",
                  "text": " | number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Value",
                  "canonicalReference": "scalar-autograd!Value:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "other",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "powValue"
            },
            {
              "kind": "Method",
              "canonicalReference": "scalar-autograd!Value#reciprocal:member(1)",
              "docComment": "/**\n * Returns the reciprocal (1/x) of this Value.\n *\n * @returns New Value with reciprocal.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "reciprocal(): "
                },
                {
                  "kind": "Reference",
                  "text": "Value",
                  "canonicalReference": "scalar-autograd!Value:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "reciprocal"
            },
            {
              "kind": "Method",
              "canonicalReference": "scalar-autograd!Value#relu:member(1)",
              "docComment": "/**\n * Returns relu(this).\n *\n * @returns New Value with relu.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "relu(): "
                },
                {
                  "kind": "Reference",
                  "text": "Value",
                  "canonicalReference": "scalar-autograd!Value:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "relu"
            },
            {
              "kind": "Property",
              "canonicalReference": "scalar-autograd!Value#requiresGrad:member",
              "docComment": "/**\n * Whether this value participates in gradient computation.\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "requiresGrad: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "requiresGrad",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "scalar-autograd!Value#round:member(1)",
              "docComment": "/**\n * Returns the rounded value of this Value.\n *\n * @returns New Value with rounded data.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "round(): "
                },
                {
                  "kind": "Reference",
                  "text": "Value",
                  "canonicalReference": "scalar-autograd!Value:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "round"
            },
            {
              "kind": "Method",
              "canonicalReference": "scalar-autograd!Value#sigmoid:member(1)",
              "docComment": "/**\n * Returns sigmoid(this).\n *\n * @returns New Value with sigmoid.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "sigmoid(): "
                },
                {
                  "kind": "Reference",
                  "text": "Value",
                  "canonicalReference": "scalar-autograd!Value:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "sigmoid"
            },
            {
              "kind": "Method",
              "canonicalReference": "scalar-autograd!Value#sign:member(1)",
              "docComment": "/**\n * Returns sign(this).\n *\n * @returns New Value with sign.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "sign(): "
                },
                {
                  "kind": "Reference",
                  "text": "Value",
                  "canonicalReference": "scalar-autograd!Value:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "sign"
            },
            {
              "kind": "Method",
              "canonicalReference": "scalar-autograd!Value#sin:member(1)",
              "docComment": "/**\n * Returns sin(this).\n *\n * @returns New Value with sin.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "sin(): "
                },
                {
                  "kind": "Reference",
                  "text": "Value",
                  "canonicalReference": "scalar-autograd!Value:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "sin"
            },
            {
              "kind": "Method",
              "canonicalReference": "scalar-autograd!Value#softplus:member(1)",
              "docComment": "/**\n * Returns softplus(this).\n *\n * @returns New Value with softplus.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "softplus(): "
                },
                {
                  "kind": "Reference",
                  "text": "Value",
                  "canonicalReference": "scalar-autograd!Value:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "softplus"
            },
            {
              "kind": "Method",
              "canonicalReference": "scalar-autograd!Value#square:member(1)",
              "docComment": "/**\n * Returns the square of this Value.\n *\n * @returns New Value with squared data.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "square(): "
                },
                {
                  "kind": "Reference",
                  "text": "Value",
                  "canonicalReference": "scalar-autograd!Value:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "square"
            },
            {
              "kind": "Method",
              "canonicalReference": "scalar-autograd!Value#sub:member(1)",
              "docComment": "/**\n * Subtracts other from this.\n *\n * @param other - Value or number to subtract\n *\n * @returns New Value with difference.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "sub(other: "
                },
                {
                  "kind": "Reference",
                  "text": "Value",
                  "canonicalReference": "scalar-autograd!Value:class"
                },
                {
                  "kind": "Content",
                  "text": " | number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Value",
                  "canonicalReference": "scalar-autograd!Value:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "other",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "sub"
            },
            {
              "kind": "Method",
              "canonicalReference": "scalar-autograd!Value.sum:member(1)",
              "docComment": "/**\n * Returns the sum of the given Values.\n *\n * @param vals - Array of Value objects\n *\n * @returns New Value holding their sum.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static sum(vals: "
                },
                {
                  "kind": "Reference",
                  "text": "Value",
                  "canonicalReference": "scalar-autograd!Value:class"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Value",
                  "canonicalReference": "scalar-autograd!Value:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "vals",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "sum"
            },
            {
              "kind": "Method",
              "canonicalReference": "scalar-autograd!Value#tan:member(1)",
              "docComment": "/**\n * Returns tan(this).\n *\n * @returns New Value with tan.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "tan(): "
                },
                {
                  "kind": "Reference",
                  "text": "Value",
                  "canonicalReference": "scalar-autograd!Value:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "tan"
            },
            {
              "kind": "Method",
              "canonicalReference": "scalar-autograd!Value#tanh:member(1)",
              "docComment": "/**\n * Returns tanh(this).\n *\n * @returns New Value with tanh.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "tanh(): "
                },
                {
                  "kind": "Reference",
                  "text": "Value",
                  "canonicalReference": "scalar-autograd!Value:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "tanh"
            },
            {
              "kind": "Method",
              "canonicalReference": "scalar-autograd!Value#toString:member(1)",
              "docComment": "/**\n * Returns string representation for debugging.\n *\n * @returns String summary of Value\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "toString(): "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "toString"
            },
            {
              "kind": "Method",
              "canonicalReference": "scalar-autograd!Value.withNoGrad:member(1)",
              "docComment": "/**\n * Temporarily disables gradient tracking within the callback scope, like torch.no_grad(). Restores the previous state after running fn.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static withNoGrad<T>(fn: "
                },
                {
                  "kind": "Content",
                  "text": "() => T"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "T"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "T",
                  "constraintTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "fn",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "withNoGrad"
            },
            {
              "kind": "Method",
              "canonicalReference": "scalar-autograd!Value.zeroGradAll:member(1)",
              "docComment": "/**\n * Sets all grad fields in all supplied trees to 0.\n *\n * @param vals - Values whose trees to zero\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static zeroGradAll(vals: "
                },
                {
                  "kind": "Reference",
                  "text": "Value",
                  "canonicalReference": "scalar-autograd!Value:class"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "vals",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "zeroGradAll"
            },
            {
              "kind": "Method",
              "canonicalReference": "scalar-autograd!Value.zeroGradTree:member(1)",
              "docComment": "/**\n * Sets all grad fields in the computation tree (from root) to 0.\n *\n * @param root - Value to zero tree from\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static zeroGradTree(root: "
                },
                {
                  "kind": "Reference",
                  "text": "Value",
                  "canonicalReference": "scalar-autograd!Value:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "root",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "zeroGradTree"
            }
          ],
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "scalar-autograd!Vec2:class",
          "docComment": "/**\n * 2D vector class with differentiable operations.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class Vec2 "
            }
          ],
          "fileUrlPath": "dist/Vec2.d.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "Vec2",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "scalar-autograd!Vec2:constructor(1)",
              "docComment": "/**\n * Constructs a new instance of the `Vec2` class\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(x: "
                },
                {
                  "kind": "Reference",
                  "text": "Value",
                  "canonicalReference": "scalar-autograd!Value:class"
                },
                {
                  "kind": "Content",
                  "text": " | number"
                },
                {
                  "kind": "Content",
                  "text": ", y: "
                },
                {
                  "kind": "Reference",
                  "text": "Value",
                  "canonicalReference": "scalar-autograd!Value:class"
                },
                {
                  "kind": "Content",
                  "text": " | number"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "x",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "y",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 6
                  },
                  "isOptional": false
                }
              ]
            },
            {
              "kind": "Method",
              "canonicalReference": "scalar-autograd!Vec2#add:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "add(other: "
                },
                {
                  "kind": "Reference",
                  "text": "Vec2",
                  "canonicalReference": "scalar-autograd!Vec2:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Vec2",
                  "canonicalReference": "scalar-autograd!Vec2:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "other",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "add"
            },
            {
              "kind": "Method",
              "canonicalReference": "scalar-autograd!Vec2.angleBetween:member(1)",
              "docComment": "/**\n * Angle between two vectors in radians. Returns value in range [0, π].\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static angleBetween(a: "
                },
                {
                  "kind": "Reference",
                  "text": "Vec2",
                  "canonicalReference": "scalar-autograd!Vec2:class"
                },
                {
                  "kind": "Content",
                  "text": ", b: "
                },
                {
                  "kind": "Reference",
                  "text": "Vec2",
                  "canonicalReference": "scalar-autograd!Vec2:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Value",
                  "canonicalReference": "scalar-autograd!Value:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "a",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "b",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "angleBetween"
            },
            {
              "kind": "Method",
              "canonicalReference": "scalar-autograd!Vec2.C:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static C(x: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", y: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Vec2",
                  "canonicalReference": "scalar-autograd!Vec2:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "x",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "y",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "C"
            },
            {
              "kind": "Method",
              "canonicalReference": "scalar-autograd!Vec2.cross:member(1)",
              "docComment": "/**\n * 2D cross product (returns scalar z-component of 3D cross product). Also known as the \"perpendicular dot product\" or \"wedge product\". Returns positive if b is counter-clockwise from a, negative if clockwise.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static cross(a: "
                },
                {
                  "kind": "Reference",
                  "text": "Vec2",
                  "canonicalReference": "scalar-autograd!Vec2:class"
                },
                {
                  "kind": "Content",
                  "text": ", b: "
                },
                {
                  "kind": "Reference",
                  "text": "Vec2",
                  "canonicalReference": "scalar-autograd!Vec2:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Value",
                  "canonicalReference": "scalar-autograd!Value:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "a",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "b",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "cross"
            },
            {
              "kind": "Method",
              "canonicalReference": "scalar-autograd!Vec2.distanceToLine:member(1)",
              "docComment": "/**\n * Distance from this point to a line defined by two points. Uses the perpendicular distance formula.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static distanceToLine(point: "
                },
                {
                  "kind": "Reference",
                  "text": "Vec2",
                  "canonicalReference": "scalar-autograd!Vec2:class"
                },
                {
                  "kind": "Content",
                  "text": ", lineStart: "
                },
                {
                  "kind": "Reference",
                  "text": "Vec2",
                  "canonicalReference": "scalar-autograd!Vec2:class"
                },
                {
                  "kind": "Content",
                  "text": ", lineEnd: "
                },
                {
                  "kind": "Reference",
                  "text": "Vec2",
                  "canonicalReference": "scalar-autograd!Vec2:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Value",
                  "canonicalReference": "scalar-autograd!Value:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "point",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "lineStart",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "lineEnd",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "distanceToLine"
            },
            {
              "kind": "Method",
              "canonicalReference": "scalar-autograd!Vec2#div:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "div(scalar: "
                },
                {
                  "kind": "Reference",
                  "text": "Value",
                  "canonicalReference": "scalar-autograd!Value:class"
                },
                {
                  "kind": "Content",
                  "text": " | number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Vec2",
                  "canonicalReference": "scalar-autograd!Vec2:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "scalar",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "div"
            },
            {
              "kind": "Method",
              "canonicalReference": "scalar-autograd!Vec2.dot:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static dot(a: "
                },
                {
                  "kind": "Reference",
                  "text": "Vec2",
                  "canonicalReference": "scalar-autograd!Vec2:class"
                },
                {
                  "kind": "Content",
                  "text": ", b: "
                },
                {
                  "kind": "Reference",
                  "text": "Vec2",
                  "canonicalReference": "scalar-autograd!Vec2:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Value",
                  "canonicalReference": "scalar-autograd!Value:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "a",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "b",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "dot"
            },
            {
              "kind": "Property",
              "canonicalReference": "scalar-autograd!Vec2#magnitude:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get magnitude(): "
                },
                {
                  "kind": "Reference",
                  "text": "Value",
                  "canonicalReference": "scalar-autograd!Value:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "magnitude",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "scalar-autograd!Vec2#mul:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "mul(scalar: "
                },
                {
                  "kind": "Reference",
                  "text": "Value",
                  "canonicalReference": "scalar-autograd!Value:class"
                },
                {
                  "kind": "Content",
                  "text": " | number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Vec2",
                  "canonicalReference": "scalar-autograd!Vec2:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "scalar",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "mul"
            },
            {
              "kind": "Property",
              "canonicalReference": "scalar-autograd!Vec2#normalized:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get normalized(): "
                },
                {
                  "kind": "Reference",
                  "text": "Vec2",
                  "canonicalReference": "scalar-autograd!Vec2:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "normalized",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "scalar-autograd!Vec2.one:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static one(): "
                },
                {
                  "kind": "Reference",
                  "text": "Vec2",
                  "canonicalReference": "scalar-autograd!Vec2:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "one"
            },
            {
              "kind": "Property",
              "canonicalReference": "scalar-autograd!Vec2#perpendicular:member",
              "docComment": "/**\n * Get perpendicular vector (rotated 90° counter-clockwise). Useful for computing distances to lines.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get perpendicular(): "
                },
                {
                  "kind": "Reference",
                  "text": "Vec2",
                  "canonicalReference": "scalar-autograd!Vec2:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "perpendicular",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "scalar-autograd!Vec2#sqrMagnitude:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get sqrMagnitude(): "
                },
                {
                  "kind": "Reference",
                  "text": "Value",
                  "canonicalReference": "scalar-autograd!Value:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "sqrMagnitude",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "scalar-autograd!Vec2#sub:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "sub(other: "
                },
                {
                  "kind": "Reference",
                  "text": "Vec2",
                  "canonicalReference": "scalar-autograd!Vec2:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Vec2",
                  "canonicalReference": "scalar-autograd!Vec2:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "other",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "sub"
            },
            {
              "kind": "Method",
              "canonicalReference": "scalar-autograd!Vec2#toString:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "toString(): "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "toString"
            },
            {
              "kind": "Property",
              "canonicalReference": "scalar-autograd!Vec2#trainables:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get trainables(): "
                },
                {
                  "kind": "Reference",
                  "text": "Value",
                  "canonicalReference": "scalar-autograd!Value:class"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "trainables",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "scalar-autograd!Vec2.W:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static W(x: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", y: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Vec2",
                  "canonicalReference": "scalar-autograd!Vec2:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "x",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "y",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "W"
            },
            {
              "kind": "Property",
              "canonicalReference": "scalar-autograd!Vec2#x:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "x: "
                },
                {
                  "kind": "Reference",
                  "text": "Value",
                  "canonicalReference": "scalar-autograd!Value:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "x",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "scalar-autograd!Vec2#y:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "y: "
                },
                {
                  "kind": "Reference",
                  "text": "Value",
                  "canonicalReference": "scalar-autograd!Value:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "y",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "scalar-autograd!Vec2.zero:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static zero(): "
                },
                {
                  "kind": "Reference",
                  "text": "Vec2",
                  "canonicalReference": "scalar-autograd!Vec2:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "zero"
            }
          ],
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "scalar-autograd!Vec3:class",
          "docComment": "/**\n * 3D vector class with differentiable operations.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class Vec3 "
            }
          ],
          "fileUrlPath": "dist/Vec3.d.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "Vec3",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "scalar-autograd!Vec3:constructor(1)",
              "docComment": "/**\n * Constructs a new instance of the `Vec3` class\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(x: "
                },
                {
                  "kind": "Reference",
                  "text": "Value",
                  "canonicalReference": "scalar-autograd!Value:class"
                },
                {
                  "kind": "Content",
                  "text": " | number"
                },
                {
                  "kind": "Content",
                  "text": ", y: "
                },
                {
                  "kind": "Reference",
                  "text": "Value",
                  "canonicalReference": "scalar-autograd!Value:class"
                },
                {
                  "kind": "Content",
                  "text": " | number"
                },
                {
                  "kind": "Content",
                  "text": ", z: "
                },
                {
                  "kind": "Reference",
                  "text": "Value",
                  "canonicalReference": "scalar-autograd!Value:class"
                },
                {
                  "kind": "Content",
                  "text": " | number"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "x",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "y",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 6
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "z",
                  "parameterTypeTokenRange": {
                    "startIndex": 7,
                    "endIndex": 9
                  },
                  "isOptional": false
                }
              ]
            },
            {
              "kind": "Method",
              "canonicalReference": "scalar-autograd!Vec3#add:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "add(other: "
                },
                {
                  "kind": "Reference",
                  "text": "Vec3",
                  "canonicalReference": "scalar-autograd!Vec3:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Vec3",
                  "canonicalReference": "scalar-autograd!Vec3:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "other",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "add"
            },
            {
              "kind": "Method",
              "canonicalReference": "scalar-autograd!Vec3.angleBetween:member(1)",
              "docComment": "/**\n * Compute angle between two vectors in radians. Returns value in range [0, π].\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static angleBetween(a: "
                },
                {
                  "kind": "Reference",
                  "text": "Vec3",
                  "canonicalReference": "scalar-autograd!Vec3:class"
                },
                {
                  "kind": "Content",
                  "text": ", b: "
                },
                {
                  "kind": "Reference",
                  "text": "Vec3",
                  "canonicalReference": "scalar-autograd!Vec3:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Value",
                  "canonicalReference": "scalar-autograd!Value:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "a",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "b",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "angleBetween"
            },
            {
              "kind": "Method",
              "canonicalReference": "scalar-autograd!Vec3.C:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static C(x: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", y: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", z: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Vec3",
                  "canonicalReference": "scalar-autograd!Vec3:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "x",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "y",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "z",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "C"
            },
            {
              "kind": "Method",
              "canonicalReference": "scalar-autograd!Vec3#clone:member(1)",
              "docComment": "/**\n * Clone this vector (create new Vec3 with same values but independent graph).\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "clone(): "
                },
                {
                  "kind": "Reference",
                  "text": "Vec3",
                  "canonicalReference": "scalar-autograd!Vec3:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "clone"
            },
            {
              "kind": "Method",
              "canonicalReference": "scalar-autograd!Vec3.cross:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static cross(a: "
                },
                {
                  "kind": "Reference",
                  "text": "Vec3",
                  "canonicalReference": "scalar-autograd!Vec3:class"
                },
                {
                  "kind": "Content",
                  "text": ", b: "
                },
                {
                  "kind": "Reference",
                  "text": "Vec3",
                  "canonicalReference": "scalar-autograd!Vec3:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Vec3",
                  "canonicalReference": "scalar-autograd!Vec3:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "a",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "b",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "cross"
            },
            {
              "kind": "Method",
              "canonicalReference": "scalar-autograd!Vec3.distance:member(1)",
              "docComment": "/**\n * Distance between two points.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static distance(a: "
                },
                {
                  "kind": "Reference",
                  "text": "Vec3",
                  "canonicalReference": "scalar-autograd!Vec3:class"
                },
                {
                  "kind": "Content",
                  "text": ", b: "
                },
                {
                  "kind": "Reference",
                  "text": "Vec3",
                  "canonicalReference": "scalar-autograd!Vec3:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Value",
                  "canonicalReference": "scalar-autograd!Value:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "a",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "b",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "distance"
            },
            {
              "kind": "Method",
              "canonicalReference": "scalar-autograd!Vec3#div:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "div(scalar: "
                },
                {
                  "kind": "Reference",
                  "text": "Value",
                  "canonicalReference": "scalar-autograd!Value:class"
                },
                {
                  "kind": "Content",
                  "text": " | number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Vec3",
                  "canonicalReference": "scalar-autograd!Vec3:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "scalar",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "div"
            },
            {
              "kind": "Method",
              "canonicalReference": "scalar-autograd!Vec3.dot:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static dot(a: "
                },
                {
                  "kind": "Reference",
                  "text": "Vec3",
                  "canonicalReference": "scalar-autograd!Vec3:class"
                },
                {
                  "kind": "Content",
                  "text": ", b: "
                },
                {
                  "kind": "Reference",
                  "text": "Vec3",
                  "canonicalReference": "scalar-autograd!Vec3:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Value",
                  "canonicalReference": "scalar-autograd!Value:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "a",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "b",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "dot"
            },
            {
              "kind": "Method",
              "canonicalReference": "scalar-autograd!Vec3.fromData:member(1)",
              "docComment": "/**\n * Create Vec3 from raw data (no gradients).\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static fromData(x: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", y: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", z: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Vec3",
                  "canonicalReference": "scalar-autograd!Vec3:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "x",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "y",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "z",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "fromData"
            },
            {
              "kind": "Method",
              "canonicalReference": "scalar-autograd!Vec3.lerp:member(1)",
              "docComment": "/**\n * Linear interpolation between two vectors.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static lerp(a: "
                },
                {
                  "kind": "Reference",
                  "text": "Vec3",
                  "canonicalReference": "scalar-autograd!Vec3:class"
                },
                {
                  "kind": "Content",
                  "text": ", b: "
                },
                {
                  "kind": "Reference",
                  "text": "Vec3",
                  "canonicalReference": "scalar-autograd!Vec3:class"
                },
                {
                  "kind": "Content",
                  "text": ", t: "
                },
                {
                  "kind": "Reference",
                  "text": "Value",
                  "canonicalReference": "scalar-autograd!Value:class"
                },
                {
                  "kind": "Content",
                  "text": " | number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Vec3",
                  "canonicalReference": "scalar-autograd!Vec3:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 8,
                "endIndex": 9
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "a",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "b",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "t",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 7
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "lerp"
            },
            {
              "kind": "Property",
              "canonicalReference": "scalar-autograd!Vec3#magnitude:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get magnitude(): "
                },
                {
                  "kind": "Reference",
                  "text": "Value",
                  "canonicalReference": "scalar-autograd!Value:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "magnitude",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "scalar-autograd!Vec3.max:member(1)",
              "docComment": "/**\n * Component-wise maximum.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static max(a: "
                },
                {
                  "kind": "Reference",
                  "text": "Vec3",
                  "canonicalReference": "scalar-autograd!Vec3:class"
                },
                {
                  "kind": "Content",
                  "text": ", b: "
                },
                {
                  "kind": "Reference",
                  "text": "Vec3",
                  "canonicalReference": "scalar-autograd!Vec3:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Vec3",
                  "canonicalReference": "scalar-autograd!Vec3:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "a",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "b",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "max"
            },
            {
              "kind": "Method",
              "canonicalReference": "scalar-autograd!Vec3.min:member(1)",
              "docComment": "/**\n * Component-wise minimum.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static min(a: "
                },
                {
                  "kind": "Reference",
                  "text": "Vec3",
                  "canonicalReference": "scalar-autograd!Vec3:class"
                },
                {
                  "kind": "Content",
                  "text": ", b: "
                },
                {
                  "kind": "Reference",
                  "text": "Vec3",
                  "canonicalReference": "scalar-autograd!Vec3:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Vec3",
                  "canonicalReference": "scalar-autograd!Vec3:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "a",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "b",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "min"
            },
            {
              "kind": "Method",
              "canonicalReference": "scalar-autograd!Vec3#mul:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "mul(scalar: "
                },
                {
                  "kind": "Reference",
                  "text": "Value",
                  "canonicalReference": "scalar-autograd!Value:class"
                },
                {
                  "kind": "Content",
                  "text": " | number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Vec3",
                  "canonicalReference": "scalar-autograd!Vec3:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "scalar",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "mul"
            },
            {
              "kind": "Property",
              "canonicalReference": "scalar-autograd!Vec3#normalized:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get normalized(): "
                },
                {
                  "kind": "Reference",
                  "text": "Vec3",
                  "canonicalReference": "scalar-autograd!Vec3:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "normalized",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "scalar-autograd!Vec3.one:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static one(): "
                },
                {
                  "kind": "Reference",
                  "text": "Vec3",
                  "canonicalReference": "scalar-autograd!Vec3:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "one"
            },
            {
              "kind": "Method",
              "canonicalReference": "scalar-autograd!Vec3.project:member(1)",
              "docComment": "/**\n * Project vector a onto vector b.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static project(a: "
                },
                {
                  "kind": "Reference",
                  "text": "Vec3",
                  "canonicalReference": "scalar-autograd!Vec3:class"
                },
                {
                  "kind": "Content",
                  "text": ", b: "
                },
                {
                  "kind": "Reference",
                  "text": "Vec3",
                  "canonicalReference": "scalar-autograd!Vec3:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Vec3",
                  "canonicalReference": "scalar-autograd!Vec3:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "a",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "b",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "project"
            },
            {
              "kind": "Method",
              "canonicalReference": "scalar-autograd!Vec3.reject:member(1)",
              "docComment": "/**\n * Reject vector a from vector b (component of a perpendicular to b).\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static reject(a: "
                },
                {
                  "kind": "Reference",
                  "text": "Vec3",
                  "canonicalReference": "scalar-autograd!Vec3:class"
                },
                {
                  "kind": "Content",
                  "text": ", b: "
                },
                {
                  "kind": "Reference",
                  "text": "Vec3",
                  "canonicalReference": "scalar-autograd!Vec3:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Vec3",
                  "canonicalReference": "scalar-autograd!Vec3:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "a",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "b",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "reject"
            },
            {
              "kind": "Method",
              "canonicalReference": "scalar-autograd!Vec3.sqrDistance:member(1)",
              "docComment": "/**\n * Squared distance (faster, no sqrt).\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static sqrDistance(a: "
                },
                {
                  "kind": "Reference",
                  "text": "Vec3",
                  "canonicalReference": "scalar-autograd!Vec3:class"
                },
                {
                  "kind": "Content",
                  "text": ", b: "
                },
                {
                  "kind": "Reference",
                  "text": "Vec3",
                  "canonicalReference": "scalar-autograd!Vec3:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Value",
                  "canonicalReference": "scalar-autograd!Value:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "a",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "b",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "sqrDistance"
            },
            {
              "kind": "Property",
              "canonicalReference": "scalar-autograd!Vec3#sqrMagnitude:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get sqrMagnitude(): "
                },
                {
                  "kind": "Reference",
                  "text": "Value",
                  "canonicalReference": "scalar-autograd!Value:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "sqrMagnitude",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "scalar-autograd!Vec3#sub:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "sub(other: "
                },
                {
                  "kind": "Reference",
                  "text": "Vec3",
                  "canonicalReference": "scalar-autograd!Vec3:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Vec3",
                  "canonicalReference": "scalar-autograd!Vec3:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "other",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "sub"
            },
            {
              "kind": "Method",
              "canonicalReference": "scalar-autograd!Vec3#toArray:member(1)",
              "docComment": "/**\n * Extract raw data as array [x, y, z].\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "toArray(): "
                },
                {
                  "kind": "Content",
                  "text": "number[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "toArray"
            },
            {
              "kind": "Method",
              "canonicalReference": "scalar-autograd!Vec3#toString:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "toString(): "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "toString"
            },
            {
              "kind": "Property",
              "canonicalReference": "scalar-autograd!Vec3#trainables:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get trainables(): "
                },
                {
                  "kind": "Reference",
                  "text": "Value",
                  "canonicalReference": "scalar-autograd!Value:class"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "trainables",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "scalar-autograd!Vec3.W:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static W(x: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", y: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", z: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Vec3",
                  "canonicalReference": "scalar-autograd!Vec3:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "x",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "y",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "z",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "W"
            },
            {
              "kind": "Property",
              "canonicalReference": "scalar-autograd!Vec3#x:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "x: "
                },
                {
                  "kind": "Reference",
                  "text": "Value",
                  "canonicalReference": "scalar-autograd!Value:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "x",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "scalar-autograd!Vec3#y:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "y: "
                },
                {
                  "kind": "Reference",
                  "text": "Value",
                  "canonicalReference": "scalar-autograd!Value:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "y",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "scalar-autograd!Vec3#z:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "z: "
                },
                {
                  "kind": "Reference",
                  "text": "Value",
                  "canonicalReference": "scalar-autograd!Value:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "z",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "scalar-autograd!Vec3.zero:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static zero(): "
                },
                {
                  "kind": "Reference",
                  "text": "Vec3",
                  "canonicalReference": "scalar-autograd!Vec3:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "zero"
            }
          ],
          "implementsTokenRanges": []
        }
      ]
    }
  ]
}
