function anonymous(allValues,indices,gradientIndices,gradient
) {

    const idx_0 = indices[0];
    const idx_1 = indices[1];
    const idx_2 = indices[2];
    const idx_3 = indices[3];
    const idx_4 = indices[4];
    const idx_5 = indices[5];
    const idx_6 = indices[6];
    const idx_7 = indices[7];
    const idx_8 = indices[8];
    const idx_9 = indices[9];
    const idx_10 = indices[10];
    const idx_11 = indices[11];
    const idx_12 = indices[12];
    const idx_13 = indices[13];
    const idx_14 = indices[14];
    const idx_15 = indices[15];
    const idx_16 = indices[16];
    const idx_17 = indices[17];
    const idx_18 = indices[18];
    const idx_19 = indices[19];
    const idx_20 = indices[20];
    const idx_21 = indices[21];
    const idx_22 = indices[22];
    const idx_23 = indices[23];
    const idx_24 = indices[24];
    const idx_25 = indices[25];
    const idx_26 = indices[26];
    const idx_27 = indices[27];
    const idx_28 = indices[28];
    const idx_29 = indices[29];
    const idx_30 = indices[30];
    const idx_31 = indices[31];
    const idx_32 = indices[32];
    const idx_33 = indices[33];
    const idx_34 = indices[34];
    const idx_35 = indices[35];
    const idx_36 = indices[36];
    const idx_37 = indices[37];
    const idx_38 = indices[38];
    const idx_39 = indices[39];
    const idx_40 = indices[40];
    const idx_41 = indices[41];
    const idx_42 = indices[42];
    const idx_43 = indices[43];
    const idx_44 = indices[44];
    const idx_45 = indices[45];
    const idx_46 = indices[46];
    const idx_47 = indices[47];
    const idx_48 = indices[48];
    const idx_49 = indices[49];
    const idx_50 = indices[50];
    const idx_51 = indices[51];
    const idx_52 = indices[52];
    const idx_53 = indices[53];
    const idx_54 = indices[54];
    const idx_55 = indices[55];
    const idx_56 = indices[56];
    const idx_57 = indices[57];
    const idx_58 = indices[58];
    const idx_59 = indices[59];
    const _v0 = allValues[idx_0];
    const _v1 = allValues[idx_1];
    const _v2 = (_v0 - _v1);
    const _v3 = allValues[idx_2];
    const _v4 = Math.pow(_v2, _v3);
    const _v5 = allValues[idx_3];
    const _v6 = allValues[idx_4];
    const _v7 = (_v5 - _v6);
    const _v8 = allValues[idx_5];
    const _v9 = Math.pow(_v7, _v8);
    const _v10 = (_v4 + _v9);
    const _v11 = allValues[idx_6];
    const _v12 = allValues[idx_7];
    const _v13 = (_v11 - _v12);
    const _v14 = allValues[idx_8];
    const _v15 = Math.pow(_v13, _v14);
    const _v16 = (_v10 + _v15);
    const _v17 = Math.sqrt(_v16);
    const _v18 = (_v2 / _v17);
    const _v19 = allValues[idx_9];
    const _v20 = (_v19 - _v1);
    const _v21 = allValues[idx_10];
    const _v22 = Math.pow(_v20, _v21);
    const _v23 = allValues[idx_11];
    const _v24 = (_v23 - _v6);
    const _v25 = allValues[idx_12];
    const _v26 = Math.pow(_v24, _v25);
    const _v27 = (_v22 + _v26);
    const _v28 = allValues[idx_13];
    const _v29 = (_v28 - _v12);
    const _v30 = allValues[idx_14];
    const _v31 = Math.pow(_v29, _v30);
    const _v32 = (_v27 + _v31);
    const _v33 = Math.sqrt(_v32);
    const _v34 = (_v20 / _v33);
    const _v35 = (_v18 * _v34);
    const _v36 = (_v7 / _v17);
    const _v37 = (_v24 / _v33);
    const _v38 = (_v36 * _v37);
    const _v39 = (_v35 + _v38);
    const _v40 = (_v13 / _v17);
    const _v41 = (_v29 / _v33);
    const _v42 = (_v40 * _v41);
    const _v43 = (_v39 + _v42);
    const _v44 = allValues[idx_15];
    const _v45 = Math.pow(_v18, _v44);
    const _v46 = allValues[idx_16];
    const _v47 = Math.pow(_v36, _v46);
    const _v48 = (_v45 + _v47);
    const _v49 = allValues[idx_17];
    const _v50 = Math.pow(_v40, _v49);
    const _v51 = (_v48 + _v50);
    const _v52 = Math.sqrt(_v51);
    const _v53 = allValues[idx_18];
    const _v54 = Math.pow(_v34, _v53);
    const _v55 = allValues[idx_19];
    const _v56 = Math.pow(_v37, _v55);
    const _v57 = (_v54 + _v56);
    const _v58 = allValues[idx_20];
    const _v59 = Math.pow(_v41, _v58);
    const _v60 = (_v57 + _v59);
    const _v61 = Math.sqrt(_v60);
    const _v62 = (_v52 * _v61);
    const _v63 = (_v43 / _v62);
    const _v64 = Math.max(-1, Math.min(_v63, 1));
    const _v65 = Math.acos(_v64);
    const _v66 = (_v23 - _v6);
    const _v67 = (_v11 - _v12);
    const _v68 = (_v66 * _v67);
    const _v69 = (_v28 - _v12);
    const _v70 = (_v5 - _v6);
    const _v71 = (_v69 * _v70);
    const _v72 = (_v68 - _v71);
    const _v73 = allValues[idx_21];
    const _v74 = Math.pow(_v72, _v73);
    const _v75 = (_v0 - _v1);
    const _v76 = (_v69 * _v75);
    const _v77 = (_v19 - _v1);
    const _v78 = (_v77 * _v67);
    const _v79 = (_v76 - _v78);
    const _v80 = allValues[idx_22];
    const _v81 = Math.pow(_v79, _v80);
    const _v82 = (_v74 + _v81);
    const _v83 = (_v77 * _v70);
    const _v84 = (_v66 * _v75);
    const _v85 = (_v83 - _v84);
    const _v86 = allValues[idx_23];
    const _v87 = Math.pow(_v85, _v86);
    const _v88 = (_v82 + _v87);
    const _v89 = Math.sqrt(_v88);
    const _v90 = (_v72 / _v89);
    const _v91 = allValues[idx_24];
    const _v92 = Math.pow(_v90, _v91);
    const _v93 = (_v79 / _v89);
    const _v94 = allValues[idx_25];
    const _v95 = Math.pow(_v93, _v94);
    const _v96 = (_v92 + _v95);
    const _v97 = (_v85 / _v89);
    const _v98 = allValues[idx_26];
    const _v99 = Math.pow(_v97, _v98);
    const _v100 = (_v96 + _v99);
    const _v101 = Math.sqrt(_v100);
    const _v102 = (_v90 / _v101);
    const _v103 = (_v93 / _v101);
    const _v104 = (_v0 - _v1);
    const _v105 = allValues[idx_27];
    const _v106 = (_v105 - _v6);
    const _v107 = (_v104 * _v106);
    const _v108 = (_v5 - _v6);
    const _v109 = allValues[idx_28];
    const _v110 = (_v109 - _v1);
    const _v111 = (_v108 * _v110);
    const _v112 = (_v107 - _v111);
    const _v113 = allValues[idx_29];
    const _v114 = (_v113 - _v12);
    const _v115 = (_v108 * _v114);
    const _v116 = (_v11 - _v12);
    const _v117 = (_v116 * _v106);
    const _v118 = (_v115 - _v117);
    const _v119 = allValues[idx_30];
    const _v120 = Math.pow(_v118, _v119);
    const _v121 = (_v116 * _v110);
    const _v122 = (_v104 * _v114);
    const _v123 = (_v121 - _v122);
    const _v124 = allValues[idx_31];
    const _v125 = Math.pow(_v123, _v124);
    const _v126 = (_v120 + _v125);
    const _v127 = allValues[idx_32];
    const _v128 = Math.pow(_v112, _v127);
    const _v129 = (_v126 + _v128);
    const _v130 = Math.sqrt(_v129);
    const _v131 = (_v112 / _v130);
    const _v132 = (_v118 / _v130);
    const _v133 = allValues[idx_33];
    const _v134 = Math.pow(_v132, _v133);
    const _v135 = (_v123 / _v130);
    const _v136 = allValues[idx_34];
    const _v137 = Math.pow(_v135, _v136);
    const _v138 = (_v134 + _v137);
    const _v139 = allValues[idx_35];
    const _v140 = Math.pow(_v131, _v139);
    const _v141 = (_v138 + _v140);
    const _v142 = Math.sqrt(_v141);
    const _v143 = (_v131 / _v142);
    const _v144 = (_v103 * _v143);
    const _v145 = (_v97 / _v101);
    const _v146 = (_v135 / _v142);
    const _v147 = (_v145 * _v146);
    const _v148 = (_v144 - _v147);
    const _v149 = (_v109 - _v1);
    const _v150 = allValues[idx_36];
    const _v151 = (_v150 - _v6);
    const _v152 = (_v149 * _v151);
    const _v153 = (_v105 - _v6);
    const _v154 = allValues[idx_37];
    const _v155 = (_v154 - _v1);
    const _v156 = (_v153 * _v155);
    const _v157 = (_v152 - _v156);
    const _v158 = allValues[idx_38];
    const _v159 = (_v158 - _v12);
    const _v160 = (_v153 * _v159);
    const _v161 = (_v113 - _v12);
    const _v162 = (_v161 * _v151);
    const _v163 = (_v160 - _v162);
    const _v164 = allValues[idx_39];
    const _v165 = Math.pow(_v163, _v164);
    const _v166 = (_v161 * _v155);
    const _v167 = (_v149 * _v159);
    const _v168 = (_v166 - _v167);
    const _v169 = allValues[idx_40];
    const _v170 = Math.pow(_v168, _v169);
    const _v171 = (_v165 + _v170);
    const _v172 = allValues[idx_41];
    const _v173 = Math.pow(_v157, _v172);
    const _v174 = (_v171 + _v173);
    const _v175 = Math.sqrt(_v174);
    const _v176 = (_v157 / _v175);
    const _v177 = (_v163 / _v175);
    const _v178 = allValues[idx_42];
    const _v179 = Math.pow(_v177, _v178);
    const _v180 = (_v168 / _v175);
    const _v181 = allValues[idx_43];
    const _v182 = Math.pow(_v180, _v181);
    const _v183 = (_v179 + _v182);
    const _v184 = allValues[idx_44];
    const _v185 = Math.pow(_v176, _v184);
    const _v186 = (_v183 + _v185);
    const _v187 = Math.sqrt(_v186);
    const _v188 = (_v176 / _v187);
    const _v189 = (_v103 * _v188);
    const _v190 = (_v180 / _v187);
    const _v191 = (_v145 * _v190);
    const _v192 = (_v189 - _v191);
    const _v193 = (_v148 + _v192);
    const _v194 = allValues[idx_45];
    const _v195 = Math.pow(_v193, _v194);
    const _v196 = (_v132 / _v142);
    const _v197 = (_v145 * _v196);
    const _v198 = (_v102 * _v143);
    const _v199 = (_v197 - _v198);
    const _v200 = (_v177 / _v187);
    const _v201 = (_v145 * _v200);
    const _v202 = (_v102 * _v188);
    const _v203 = (_v201 - _v202);
    const _v204 = (_v199 + _v203);
    const _v205 = allValues[idx_46];
    const _v206 = Math.pow(_v204, _v205);
    const _v207 = (_v195 + _v206);
    const _v208 = (_v102 * _v146);
    const _v209 = (_v103 * _v196);
    const _v210 = (_v208 - _v209);
    const _v211 = (_v102 * _v190);
    const _v212 = (_v103 * _v200);
    const _v213 = (_v211 - _v212);
    const _v214 = (_v210 + _v213);
    const _v215 = allValues[idx_47];
    const _v216 = Math.pow(_v214, _v215);
    const _v217 = (_v207 + _v216);
    const _v218 = Math.sqrt(_v217);
    const _v219 = (_v193 / _v218);
    const _v220 = (_v102 * _v219);
    const _v221 = (_v204 / _v218);
    const _v222 = (_v103 * _v221);
    const _v223 = (_v220 + _v222);
    const _v224 = (_v214 / _v218);
    const _v225 = (_v145 * _v224);
    const _v226 = (_v223 + _v225);
    const _v227 = (_v226 * _v226);
    const _v228 = (_v65 * _v227);
    const _v229 = (_v109 - _v1);
    const _v230 = allValues[idx_48];
    const _v231 = Math.pow(_v229, _v230);
    const _v232 = (_v105 - _v6);
    const _v233 = allValues[idx_49];
    const _v234 = Math.pow(_v232, _v233);
    const _v235 = (_v231 + _v234);
    const _v236 = (_v113 - _v12);
    const _v237 = allValues[idx_50];
    const _v238 = Math.pow(_v236, _v237);
    const _v239 = (_v235 + _v238);
    const _v240 = Math.sqrt(_v239);
    const _v241 = (_v229 / _v240);
    const _v242 = (_v0 - _v1);
    const _v243 = allValues[idx_51];
    const _v244 = Math.pow(_v242, _v243);
    const _v245 = (_v5 - _v6);
    const _v246 = allValues[idx_52];
    const _v247 = Math.pow(_v245, _v246);
    const _v248 = (_v244 + _v247);
    const _v249 = (_v11 - _v12);
    const _v250 = allValues[idx_53];
    const _v251 = Math.pow(_v249, _v250);
    const _v252 = (_v248 + _v251);
    const _v253 = Math.sqrt(_v252);
    const _v254 = (_v242 / _v253);
    const _v255 = (_v241 * _v254);
    const _v256 = (_v232 / _v240);
    const _v257 = (_v245 / _v253);
    const _v258 = (_v256 * _v257);
    const _v259 = (_v255 + _v258);
    const _v260 = (_v236 / _v240);
    const _v261 = (_v249 / _v253);
    const _v262 = (_v260 * _v261);
    const _v263 = (_v259 + _v262);
    const _v264 = allValues[idx_54];
    const _v265 = Math.pow(_v241, _v264);
    const _v266 = allValues[idx_55];
    const _v267 = Math.pow(_v256, _v266);
    const _v268 = (_v265 + _v267);
    const _v269 = allValues[idx_56];
    const _v270 = Math.pow(_v260, _v269);
    const _v271 = (_v268 + _v270);
    const _v272 = Math.sqrt(_v271);
    const _v273 = allValues[idx_57];
    const _v274 = Math.pow(_v254, _v273);
    const _v275 = allValues[idx_58];
    const _v276 = Math.pow(_v257, _v275);
    const _v277 = (_v274 + _v276);
    const _v278 = allValues[idx_59];
    const _v279 = Math.pow(_v261, _v278);
    const _v280 = (_v277 + _v279);
    const _v281 = Math.sqrt(_v280);
    const _v282 = (_v272 * _v281);
    const _v283 = (_v263 / _v282);
    const _v284 = Math.max(-1, Math.min(_v283, 1));
    const _v285 = Math.acos(_v284);
    const _v286 = (_v196 * _v219);
    const _v287 = (_v146 * _v221);
    const _v288 = (_v286 + _v287);
    const _v289 = (_v143 * _v224);
    const _v290 = (_v288 + _v289);
    const _v291 = (_v290 * _v290);
    const _v292 = (_v285 * _v291);
    const _v293 = (_v228 + _v292);
    let grad__v0 = 0;
    let grad__v1 = 0;
    let grad__v2 = 0;
    let grad__v3 = 0;
    let grad__v4 = 0;
    let grad__v5 = 0;
    let grad__v6 = 0;
    let grad__v7 = 0;
    let grad__v8 = 0;
    let grad__v9 = 0;
    let grad__v10 = 0;
    let grad__v11 = 0;
    let grad__v12 = 0;
    let grad__v13 = 0;
    let grad__v14 = 0;
    let grad__v15 = 0;
    let grad__v16 = 0;
    let grad__v17 = 0;
    let grad__v18 = 0;
    let grad__v19 = 0;
    let grad__v20 = 0;
    let grad__v21 = 0;
    let grad__v22 = 0;
    let grad__v23 = 0;
    let grad__v24 = 0;
    let grad__v25 = 0;
    let grad__v26 = 0;
    let grad__v27 = 0;
    let grad__v28 = 0;
    let grad__v29 = 0;
    let grad__v30 = 0;
    let grad__v31 = 0;
    let grad__v32 = 0;
    let grad__v33 = 0;
    let grad__v34 = 0;
    let grad__v35 = 0;
    let grad__v36 = 0;
    let grad__v37 = 0;
    let grad__v38 = 0;
    let grad__v39 = 0;
    let grad__v40 = 0;
    let grad__v41 = 0;
    let grad__v42 = 0;
    let grad__v43 = 0;
    let grad__v44 = 0;
    let grad__v45 = 0;
    let grad__v46 = 0;
    let grad__v47 = 0;
    let grad__v48 = 0;
    let grad__v49 = 0;
    let grad__v50 = 0;
    let grad__v51 = 0;
    let grad__v52 = 0;
    let grad__v53 = 0;
    let grad__v54 = 0;
    let grad__v55 = 0;
    let grad__v56 = 0;
    let grad__v57 = 0;
    let grad__v58 = 0;
    let grad__v59 = 0;
    let grad__v60 = 0;
    let grad__v61 = 0;
    let grad__v62 = 0;
    let grad__v63 = 0;
    let grad__v64 = 0;
    let grad__v65 = 0;
    let grad__v66 = 0;
    let grad__v67 = 0;
    let grad__v68 = 0;
    let grad__v69 = 0;
    let grad__v70 = 0;
    let grad__v71 = 0;
    let grad__v72 = 0;
    let grad__v73 = 0;
    let grad__v74 = 0;
    let grad__v75 = 0;
    let grad__v76 = 0;
    let grad__v77 = 0;
    let grad__v78 = 0;
    let grad__v79 = 0;
    let grad__v80 = 0;
    let grad__v81 = 0;
    let grad__v82 = 0;
    let grad__v83 = 0;
    let grad__v84 = 0;
    let grad__v85 = 0;
    let grad__v86 = 0;
    let grad__v87 = 0;
    let grad__v88 = 0;
    let grad__v89 = 0;
    let grad__v90 = 0;
    let grad__v91 = 0;
    let grad__v92 = 0;
    let grad__v93 = 0;
    let grad__v94 = 0;
    let grad__v95 = 0;
    let grad__v96 = 0;
    let grad__v97 = 0;
    let grad__v98 = 0;
    let grad__v99 = 0;
    let grad__v100 = 0;
    let grad__v101 = 0;
    let grad__v102 = 0;
    let grad__v103 = 0;
    let grad__v104 = 0;
    let grad__v105 = 0;
    let grad__v106 = 0;
    let grad__v107 = 0;
    let grad__v108 = 0;
    let grad__v109 = 0;
    let grad__v110 = 0;
    let grad__v111 = 0;
    let grad__v112 = 0;
    let grad__v113 = 0;
    let grad__v114 = 0;
    let grad__v115 = 0;
    let grad__v116 = 0;
    let grad__v117 = 0;
    let grad__v118 = 0;
    let grad__v119 = 0;
    let grad__v120 = 0;
    let grad__v121 = 0;
    let grad__v122 = 0;
    let grad__v123 = 0;
    let grad__v124 = 0;
    let grad__v125 = 0;
    let grad__v126 = 0;
    let grad__v127 = 0;
    let grad__v128 = 0;
    let grad__v129 = 0;
    let grad__v130 = 0;
    let grad__v131 = 0;
    let grad__v132 = 0;
    let grad__v133 = 0;
    let grad__v134 = 0;
    let grad__v135 = 0;
    let grad__v136 = 0;
    let grad__v137 = 0;
    let grad__v138 = 0;
    let grad__v139 = 0;
    let grad__v140 = 0;
    let grad__v141 = 0;
    let grad__v142 = 0;
    let grad__v143 = 0;
    let grad__v144 = 0;
    let grad__v145 = 0;
    let grad__v146 = 0;
    let grad__v147 = 0;
    let grad__v148 = 0;
    let grad__v149 = 0;
    let grad__v150 = 0;
    let grad__v151 = 0;
    let grad__v152 = 0;
    let grad__v153 = 0;
    let grad__v154 = 0;
    let grad__v155 = 0;
    let grad__v156 = 0;
    let grad__v157 = 0;
    let grad__v158 = 0;
    let grad__v159 = 0;
    let grad__v160 = 0;
    let grad__v161 = 0;
    let grad__v162 = 0;
    let grad__v163 = 0;
    let grad__v164 = 0;
    let grad__v165 = 0;
    let grad__v166 = 0;
    let grad__v167 = 0;
    let grad__v168 = 0;
    let grad__v169 = 0;
    let grad__v170 = 0;
    let grad__v171 = 0;
    let grad__v172 = 0;
    let grad__v173 = 0;
    let grad__v174 = 0;
    let grad__v175 = 0;
    let grad__v176 = 0;
    let grad__v177 = 0;
    let grad__v178 = 0;
    let grad__v179 = 0;
    let grad__v180 = 0;
    let grad__v181 = 0;
    let grad__v182 = 0;
    let grad__v183 = 0;
    let grad__v184 = 0;
    let grad__v185 = 0;
    let grad__v186 = 0;
    let grad__v187 = 0;
    let grad__v188 = 0;
    let grad__v189 = 0;
    let grad__v190 = 0;
    let grad__v191 = 0;
    let grad__v192 = 0;
    let grad__v193 = 0;
    let grad__v194 = 0;
    let grad__v195 = 0;
    let grad__v196 = 0;
    let grad__v197 = 0;
    let grad__v198 = 0;
    let grad__v199 = 0;
    let grad__v200 = 0;
    let grad__v201 = 0;
    let grad__v202 = 0;
    let grad__v203 = 0;
    let grad__v204 = 0;
    let grad__v205 = 0;
    let grad__v206 = 0;
    let grad__v207 = 0;
    let grad__v208 = 0;
    let grad__v209 = 0;
    let grad__v210 = 0;
    let grad__v211 = 0;
    let grad__v212 = 0;
    let grad__v213 = 0;
    let grad__v214 = 0;
    let grad__v215 = 0;
    let grad__v216 = 0;
    let grad__v217 = 0;
    let grad__v218 = 0;
    let grad__v219 = 0;
    let grad__v220 = 0;
    let grad__v221 = 0;
    let grad__v222 = 0;
    let grad__v223 = 0;
    let grad__v224 = 0;
    let grad__v225 = 0;
    let grad__v226 = 0;
    let grad__v227 = 0;
    let grad__v228 = 0;
    let grad__v229 = 0;
    let grad__v230 = 0;
    let grad__v231 = 0;
    let grad__v232 = 0;
    let grad__v233 = 0;
    let grad__v234 = 0;
    let grad__v235 = 0;
    let grad__v236 = 0;
    let grad__v237 = 0;
    let grad__v238 = 0;
    let grad__v239 = 0;
    let grad__v240 = 0;
    let grad__v241 = 0;
    let grad__v242 = 0;
    let grad__v243 = 0;
    let grad__v244 = 0;
    let grad__v245 = 0;
    let grad__v246 = 0;
    let grad__v247 = 0;
    let grad__v248 = 0;
    let grad__v249 = 0;
    let grad__v250 = 0;
    let grad__v251 = 0;
    let grad__v252 = 0;
    let grad__v253 = 0;
    let grad__v254 = 0;
    let grad__v255 = 0;
    let grad__v256 = 0;
    let grad__v257 = 0;
    let grad__v258 = 0;
    let grad__v259 = 0;
    let grad__v260 = 0;
    let grad__v261 = 0;
    let grad__v262 = 0;
    let grad__v263 = 0;
    let grad__v264 = 0;
    let grad__v265 = 0;
    let grad__v266 = 0;
    let grad__v267 = 0;
    let grad__v268 = 0;
    let grad__v269 = 0;
    let grad__v270 = 0;
    let grad__v271 = 0;
    let grad__v272 = 0;
    let grad__v273 = 0;
    let grad__v274 = 0;
    let grad__v275 = 0;
    let grad__v276 = 0;
    let grad__v277 = 0;
    let grad__v278 = 0;
    let grad__v279 = 0;
    let grad__v280 = 0;
    let grad__v281 = 0;
    let grad__v282 = 0;
    let grad__v283 = 0;
    let grad__v284 = 0;
    let grad__v285 = 0;
    let grad__v286 = 0;
    let grad__v287 = 0;
    let grad__v288 = 0;
    let grad__v289 = 0;
    let grad__v290 = 0;
    let grad__v291 = 0;
    let grad__v292 = 0;
    let grad__v293 = 0;
    grad__v293 = 1;
    grad__v228 += grad__v293; grad__v292 += grad__v293;
    grad__v285 += grad__v292 * _v291; grad__v291 += grad__v292 * _v285;
    grad__v290 += grad__v291 * _v290; grad__v290 += grad__v291 * _v290;
    grad__v288 += grad__v290; grad__v289 += grad__v290;
    grad__v143 += grad__v289 * _v224; grad__v224 += grad__v289 * _v143;
    grad__v286 += grad__v288; grad__v287 += grad__v288;
    grad__v146 += grad__v287 * _v221; grad__v221 += grad__v287 * _v146;
    grad__v196 += grad__v286 * _v219; grad__v219 += grad__v286 * _v196;
    grad__v284 += grad__v285 / (-Math.sqrt(1 - _v284 * _v284));
    grad__v283 += grad__v284 * (_v283 > -1 && _v283 < 1 ? 1 : 0);
    grad__v263 += grad__v283 / _v282; grad__v282 -= grad__v283 * _v263 / (_v282 * _v282);
    grad__v272 += grad__v282 * _v281; grad__v281 += grad__v282 * _v272;
    grad__v280 += grad__v281 * 0.5 / Math.sqrt(_v280);
    grad__v277 += grad__v280; grad__v279 += grad__v280;
    grad__v261 += grad__v279 * _v278 * Math.pow(_v261, _v278 - 1); grad__v278 += grad__v279 * Math.pow(_v261, _v278) * Math.log(_v261);
    grad__v274 += grad__v277; grad__v276 += grad__v277;
    grad__v257 += grad__v276 * _v275 * Math.pow(_v257, _v275 - 1); grad__v275 += grad__v276 * Math.pow(_v257, _v275) * Math.log(_v257);
    grad__v254 += grad__v274 * _v273 * Math.pow(_v254, _v273 - 1); grad__v273 += grad__v274 * Math.pow(_v254, _v273) * Math.log(_v254);
    grad__v271 += grad__v272 * 0.5 / Math.sqrt(_v271);
    grad__v268 += grad__v271; grad__v270 += grad__v271;
    grad__v260 += grad__v270 * _v269 * Math.pow(_v260, _v269 - 1); grad__v269 += grad__v270 * Math.pow(_v260, _v269) * Math.log(_v260);
    grad__v265 += grad__v268; grad__v267 += grad__v268;
    grad__v256 += grad__v267 * _v266 * Math.pow(_v256, _v266 - 1); grad__v266 += grad__v267 * Math.pow(_v256, _v266) * Math.log(_v256);
    grad__v241 += grad__v265 * _v264 * Math.pow(_v241, _v264 - 1); grad__v264 += grad__v265 * Math.pow(_v241, _v264) * Math.log(_v241);
    grad__v259 += grad__v263; grad__v262 += grad__v263;
    grad__v260 += grad__v262 * _v261; grad__v261 += grad__v262 * _v260;
    grad__v249 += grad__v261 / _v253; grad__v253 -= grad__v261 * _v249 / (_v253 * _v253);
    grad__v236 += grad__v260 / _v240; grad__v240 -= grad__v260 * _v236 / (_v240 * _v240);
    grad__v255 += grad__v259; grad__v258 += grad__v259;
    grad__v256 += grad__v258 * _v257; grad__v257 += grad__v258 * _v256;
    grad__v245 += grad__v257 / _v253; grad__v253 -= grad__v257 * _v245 / (_v253 * _v253);
    grad__v232 += grad__v256 / _v240; grad__v240 -= grad__v256 * _v232 / (_v240 * _v240);
    grad__v241 += grad__v255 * _v254; grad__v254 += grad__v255 * _v241;
    grad__v242 += grad__v254 / _v253; grad__v253 -= grad__v254 * _v242 / (_v253 * _v253);
    grad__v252 += grad__v253 * 0.5 / Math.sqrt(_v252);
    grad__v248 += grad__v252; grad__v251 += grad__v252;
    grad__v249 += grad__v251 * _v250 * Math.pow(_v249, _v250 - 1); grad__v250 += grad__v251 * Math.pow(_v249, _v250) * Math.log(_v249);
    grad__v11 += grad__v249; grad__v12 -= grad__v249;
    grad__v244 += grad__v248; grad__v247 += grad__v248;
    grad__v245 += grad__v247 * _v246 * Math.pow(_v245, _v246 - 1); grad__v246 += grad__v247 * Math.pow(_v245, _v246) * Math.log(_v245);
    grad__v5 += grad__v245; grad__v6 -= grad__v245;
    grad__v242 += grad__v244 * _v243 * Math.pow(_v242, _v243 - 1); grad__v243 += grad__v244 * Math.pow(_v242, _v243) * Math.log(_v242);
    grad__v0 += grad__v242; grad__v1 -= grad__v242;
    grad__v229 += grad__v241 / _v240; grad__v240 -= grad__v241 * _v229 / (_v240 * _v240);
    grad__v239 += grad__v240 * 0.5 / Math.sqrt(_v239);
    grad__v235 += grad__v239; grad__v238 += grad__v239;
    grad__v236 += grad__v238 * _v237 * Math.pow(_v236, _v237 - 1); grad__v237 += grad__v238 * Math.pow(_v236, _v237) * Math.log(_v236);
    grad__v113 += grad__v236; grad__v12 -= grad__v236;
    grad__v231 += grad__v235; grad__v234 += grad__v235;
    grad__v232 += grad__v234 * _v233 * Math.pow(_v232, _v233 - 1); grad__v233 += grad__v234 * Math.pow(_v232, _v233) * Math.log(_v232);
    grad__v105 += grad__v232; grad__v6 -= grad__v232;
    grad__v229 += grad__v231 * _v230 * Math.pow(_v229, _v230 - 1); grad__v230 += grad__v231 * Math.pow(_v229, _v230) * Math.log(_v229);
    grad__v109 += grad__v229; grad__v1 -= grad__v229;
    grad__v65 += grad__v228 * _v227; grad__v227 += grad__v228 * _v65;
    grad__v226 += grad__v227 * _v226; grad__v226 += grad__v227 * _v226;
    grad__v223 += grad__v226; grad__v225 += grad__v226;
    grad__v145 += grad__v225 * _v224; grad__v224 += grad__v225 * _v145;
    grad__v214 += grad__v224 / _v218; grad__v218 -= grad__v224 * _v214 / (_v218 * _v218);
    grad__v220 += grad__v223; grad__v222 += grad__v223;
    grad__v103 += grad__v222 * _v221; grad__v221 += grad__v222 * _v103;
    grad__v204 += grad__v221 / _v218; grad__v218 -= grad__v221 * _v204 / (_v218 * _v218);
    grad__v102 += grad__v220 * _v219; grad__v219 += grad__v220 * _v102;
    grad__v193 += grad__v219 / _v218; grad__v218 -= grad__v219 * _v193 / (_v218 * _v218);
    grad__v217 += grad__v218 * 0.5 / Math.sqrt(_v217);
    grad__v207 += grad__v217; grad__v216 += grad__v217;
    grad__v214 += grad__v216 * _v215 * Math.pow(_v214, _v215 - 1); grad__v215 += grad__v216 * Math.pow(_v214, _v215) * Math.log(_v214);
    grad__v210 += grad__v214; grad__v213 += grad__v214;
    grad__v211 += grad__v213; grad__v212 -= grad__v213;
    grad__v103 += grad__v212 * _v200; grad__v200 += grad__v212 * _v103;
    grad__v102 += grad__v211 * _v190; grad__v190 += grad__v211 * _v102;
    grad__v208 += grad__v210; grad__v209 -= grad__v210;
    grad__v103 += grad__v209 * _v196; grad__v196 += grad__v209 * _v103;
    grad__v102 += grad__v208 * _v146; grad__v146 += grad__v208 * _v102;
    grad__v195 += grad__v207; grad__v206 += grad__v207;
    grad__v204 += grad__v206 * _v205 * Math.pow(_v204, _v205 - 1); grad__v205 += grad__v206 * Math.pow(_v204, _v205) * Math.log(_v204);
    grad__v199 += grad__v204; grad__v203 += grad__v204;
    grad__v201 += grad__v203; grad__v202 -= grad__v203;
    grad__v102 += grad__v202 * _v188; grad__v188 += grad__v202 * _v102;
    grad__v145 += grad__v201 * _v200; grad__v200 += grad__v201 * _v145;
    grad__v177 += grad__v200 / _v187; grad__v187 -= grad__v200 * _v177 / (_v187 * _v187);
    grad__v197 += grad__v199; grad__v198 -= grad__v199;
    grad__v102 += grad__v198 * _v143; grad__v143 += grad__v198 * _v102;
    grad__v145 += grad__v197 * _v196; grad__v196 += grad__v197 * _v145;
    grad__v132 += grad__v196 / _v142; grad__v142 -= grad__v196 * _v132 / (_v142 * _v142);
    grad__v193 += grad__v195 * _v194 * Math.pow(_v193, _v194 - 1); grad__v194 += grad__v195 * Math.pow(_v193, _v194) * Math.log(_v193);
    grad__v148 += grad__v193; grad__v192 += grad__v193;
    grad__v189 += grad__v192; grad__v191 -= grad__v192;
    grad__v145 += grad__v191 * _v190; grad__v190 += grad__v191 * _v145;
    grad__v180 += grad__v190 / _v187; grad__v187 -= grad__v190 * _v180 / (_v187 * _v187);
    grad__v103 += grad__v189 * _v188; grad__v188 += grad__v189 * _v103;
    grad__v176 += grad__v188 / _v187; grad__v187 -= grad__v188 * _v176 / (_v187 * _v187);
    grad__v186 += grad__v187 * 0.5 / Math.sqrt(_v186);
    grad__v183 += grad__v186; grad__v185 += grad__v186;
    grad__v176 += grad__v185 * _v184 * Math.pow(_v176, _v184 - 1); grad__v184 += grad__v185 * Math.pow(_v176, _v184) * Math.log(_v176);
    grad__v179 += grad__v183; grad__v182 += grad__v183;
    grad__v180 += grad__v182 * _v181 * Math.pow(_v180, _v181 - 1); grad__v181 += grad__v182 * Math.pow(_v180, _v181) * Math.log(_v180);
    grad__v168 += grad__v180 / _v175; grad__v175 -= grad__v180 * _v168 / (_v175 * _v175);
    grad__v177 += grad__v179 * _v178 * Math.pow(_v177, _v178 - 1); grad__v178 += grad__v179 * Math.pow(_v177, _v178) * Math.log(_v177);
    grad__v163 += grad__v177 / _v175; grad__v175 -= grad__v177 * _v163 / (_v175 * _v175);
    grad__v157 += grad__v176 / _v175; grad__v175 -= grad__v176 * _v157 / (_v175 * _v175);
    grad__v174 += grad__v175 * 0.5 / Math.sqrt(_v174);
    grad__v171 += grad__v174; grad__v173 += grad__v174;
    grad__v157 += grad__v173 * _v172 * Math.pow(_v157, _v172 - 1); grad__v172 += grad__v173 * Math.pow(_v157, _v172) * Math.log(_v157);
    grad__v165 += grad__v171; grad__v170 += grad__v171;
    grad__v168 += grad__v170 * _v169 * Math.pow(_v168, _v169 - 1); grad__v169 += grad__v170 * Math.pow(_v168, _v169) * Math.log(_v168);
    grad__v166 += grad__v168; grad__v167 -= grad__v168;
    grad__v149 += grad__v167 * _v159; grad__v159 += grad__v167 * _v149;
    grad__v161 += grad__v166 * _v155; grad__v155 += grad__v166 * _v161;
    grad__v163 += grad__v165 * _v164 * Math.pow(_v163, _v164 - 1); grad__v164 += grad__v165 * Math.pow(_v163, _v164) * Math.log(_v163);
    grad__v160 += grad__v163; grad__v162 -= grad__v163;
    grad__v161 += grad__v162 * _v151; grad__v151 += grad__v162 * _v161;
    grad__v113 += grad__v161; grad__v12 -= grad__v161;
    grad__v153 += grad__v160 * _v159; grad__v159 += grad__v160 * _v153;
    grad__v158 += grad__v159; grad__v12 -= grad__v159;
    grad__v152 += grad__v157; grad__v156 -= grad__v157;
    grad__v153 += grad__v156 * _v155; grad__v155 += grad__v156 * _v153;
    grad__v154 += grad__v155; grad__v1 -= grad__v155;
    grad__v105 += grad__v153; grad__v6 -= grad__v153;
    grad__v149 += grad__v152 * _v151; grad__v151 += grad__v152 * _v149;
    grad__v150 += grad__v151; grad__v6 -= grad__v151;
    grad__v109 += grad__v149; grad__v1 -= grad__v149;
    grad__v144 += grad__v148; grad__v147 -= grad__v148;
    grad__v145 += grad__v147 * _v146; grad__v146 += grad__v147 * _v145;
    grad__v135 += grad__v146 / _v142; grad__v142 -= grad__v146 * _v135 / (_v142 * _v142);
    grad__v97 += grad__v145 / _v101; grad__v101 -= grad__v145 * _v97 / (_v101 * _v101);
    grad__v103 += grad__v144 * _v143; grad__v143 += grad__v144 * _v103;
    grad__v131 += grad__v143 / _v142; grad__v142 -= grad__v143 * _v131 / (_v142 * _v142);
    grad__v141 += grad__v142 * 0.5 / Math.sqrt(_v141);
    grad__v138 += grad__v141; grad__v140 += grad__v141;
    grad__v131 += grad__v140 * _v139 * Math.pow(_v131, _v139 - 1); grad__v139 += grad__v140 * Math.pow(_v131, _v139) * Math.log(_v131);
    grad__v134 += grad__v138; grad__v137 += grad__v138;
    grad__v135 += grad__v137 * _v136 * Math.pow(_v135, _v136 - 1); grad__v136 += grad__v137 * Math.pow(_v135, _v136) * Math.log(_v135);
    grad__v123 += grad__v135 / _v130; grad__v130 -= grad__v135 * _v123 / (_v130 * _v130);
    grad__v132 += grad__v134 * _v133 * Math.pow(_v132, _v133 - 1); grad__v133 += grad__v134 * Math.pow(_v132, _v133) * Math.log(_v132);
    grad__v118 += grad__v132 / _v130; grad__v130 -= grad__v132 * _v118 / (_v130 * _v130);
    grad__v112 += grad__v131 / _v130; grad__v130 -= grad__v131 * _v112 / (_v130 * _v130);
    grad__v129 += grad__v130 * 0.5 / Math.sqrt(_v129);
    grad__v126 += grad__v129; grad__v128 += grad__v129;
    grad__v112 += grad__v128 * _v127 * Math.pow(_v112, _v127 - 1); grad__v127 += grad__v128 * Math.pow(_v112, _v127) * Math.log(_v112);
    grad__v120 += grad__v126; grad__v125 += grad__v126;
    grad__v123 += grad__v125 * _v124 * Math.pow(_v123, _v124 - 1); grad__v124 += grad__v125 * Math.pow(_v123, _v124) * Math.log(_v123);
    grad__v121 += grad__v123; grad__v122 -= grad__v123;
    grad__v104 += grad__v122 * _v114; grad__v114 += grad__v122 * _v104;
    grad__v116 += grad__v121 * _v110; grad__v110 += grad__v121 * _v116;
    grad__v118 += grad__v120 * _v119 * Math.pow(_v118, _v119 - 1); grad__v119 += grad__v120 * Math.pow(_v118, _v119) * Math.log(_v118);
    grad__v115 += grad__v118; grad__v117 -= grad__v118;
    grad__v116 += grad__v117 * _v106; grad__v106 += grad__v117 * _v116;
    grad__v11 += grad__v116; grad__v12 -= grad__v116;
    grad__v108 += grad__v115 * _v114; grad__v114 += grad__v115 * _v108;
    grad__v113 += grad__v114; grad__v12 -= grad__v114;
    grad__v107 += grad__v112; grad__v111 -= grad__v112;
    grad__v108 += grad__v111 * _v110; grad__v110 += grad__v111 * _v108;
    grad__v109 += grad__v110; grad__v1 -= grad__v110;
    grad__v5 += grad__v108; grad__v6 -= grad__v108;
    grad__v104 += grad__v107 * _v106; grad__v106 += grad__v107 * _v104;
    grad__v105 += grad__v106; grad__v6 -= grad__v106;
    grad__v0 += grad__v104; grad__v1 -= grad__v104;
    grad__v93 += grad__v103 / _v101; grad__v101 -= grad__v103 * _v93 / (_v101 * _v101);
    grad__v90 += grad__v102 / _v101; grad__v101 -= grad__v102 * _v90 / (_v101 * _v101);
    grad__v100 += grad__v101 * 0.5 / Math.sqrt(_v100);
    grad__v96 += grad__v100; grad__v99 += grad__v100;
    grad__v97 += grad__v99 * _v98 * Math.pow(_v97, _v98 - 1); grad__v98 += grad__v99 * Math.pow(_v97, _v98) * Math.log(_v97);
    grad__v85 += grad__v97 / _v89; grad__v89 -= grad__v97 * _v85 / (_v89 * _v89);
    grad__v92 += grad__v96; grad__v95 += grad__v96;
    grad__v93 += grad__v95 * _v94 * Math.pow(_v93, _v94 - 1); grad__v94 += grad__v95 * Math.pow(_v93, _v94) * Math.log(_v93);
    grad__v79 += grad__v93 / _v89; grad__v89 -= grad__v93 * _v79 / (_v89 * _v89);
    grad__v90 += grad__v92 * _v91 * Math.pow(_v90, _v91 - 1); grad__v91 += grad__v92 * Math.pow(_v90, _v91) * Math.log(_v90);
    grad__v72 += grad__v90 / _v89; grad__v89 -= grad__v90 * _v72 / (_v89 * _v89);
    grad__v88 += grad__v89 * 0.5 / Math.sqrt(_v88);
    grad__v82 += grad__v88; grad__v87 += grad__v88;
    grad__v85 += grad__v87 * _v86 * Math.pow(_v85, _v86 - 1); grad__v86 += grad__v87 * Math.pow(_v85, _v86) * Math.log(_v85);
    grad__v83 += grad__v85; grad__v84 -= grad__v85;
    grad__v66 += grad__v84 * _v75; grad__v75 += grad__v84 * _v66;
    grad__v77 += grad__v83 * _v70; grad__v70 += grad__v83 * _v77;
    grad__v74 += grad__v82; grad__v81 += grad__v82;
    grad__v79 += grad__v81 * _v80 * Math.pow(_v79, _v80 - 1); grad__v80 += grad__v81 * Math.pow(_v79, _v80) * Math.log(_v79);
    grad__v76 += grad__v79; grad__v78 -= grad__v79;
    grad__v77 += grad__v78 * _v67; grad__v67 += grad__v78 * _v77;
    grad__v19 += grad__v77; grad__v1 -= grad__v77;
    grad__v69 += grad__v76 * _v75; grad__v75 += grad__v76 * _v69;
    grad__v0 += grad__v75; grad__v1 -= grad__v75;
    grad__v72 += grad__v74 * _v73 * Math.pow(_v72, _v73 - 1); grad__v73 += grad__v74 * Math.pow(_v72, _v73) * Math.log(_v72);
    grad__v68 += grad__v72; grad__v71 -= grad__v72;
    grad__v69 += grad__v71 * _v70; grad__v70 += grad__v71 * _v69;
    grad__v5 += grad__v70; grad__v6 -= grad__v70;
    grad__v28 += grad__v69; grad__v12 -= grad__v69;
    grad__v66 += grad__v68 * _v67; grad__v67 += grad__v68 * _v66;
    grad__v11 += grad__v67; grad__v12 -= grad__v67;
    grad__v23 += grad__v66; grad__v6 -= grad__v66;
    grad__v64 += grad__v65 / (-Math.sqrt(1 - _v64 * _v64));
    grad__v63 += grad__v64 * (_v63 > -1 && _v63 < 1 ? 1 : 0);
    grad__v43 += grad__v63 / _v62; grad__v62 -= grad__v63 * _v43 / (_v62 * _v62);
    grad__v52 += grad__v62 * _v61; grad__v61 += grad__v62 * _v52;
    grad__v60 += grad__v61 * 0.5 / Math.sqrt(_v60);
    grad__v57 += grad__v60; grad__v59 += grad__v60;
    grad__v41 += grad__v59 * _v58 * Math.pow(_v41, _v58 - 1); grad__v58 += grad__v59 * Math.pow(_v41, _v58) * Math.log(_v41);
    grad__v54 += grad__v57; grad__v56 += grad__v57;
    grad__v37 += grad__v56 * _v55 * Math.pow(_v37, _v55 - 1); grad__v55 += grad__v56 * Math.pow(_v37, _v55) * Math.log(_v37);
    grad__v34 += grad__v54 * _v53 * Math.pow(_v34, _v53 - 1); grad__v53 += grad__v54 * Math.pow(_v34, _v53) * Math.log(_v34);
    grad__v51 += grad__v52 * 0.5 / Math.sqrt(_v51);
    grad__v48 += grad__v51; grad__v50 += grad__v51;
    grad__v40 += grad__v50 * _v49 * Math.pow(_v40, _v49 - 1); grad__v49 += grad__v50 * Math.pow(_v40, _v49) * Math.log(_v40);
    grad__v45 += grad__v48; grad__v47 += grad__v48;
    grad__v36 += grad__v47 * _v46 * Math.pow(_v36, _v46 - 1); grad__v46 += grad__v47 * Math.pow(_v36, _v46) * Math.log(_v36);
    grad__v18 += grad__v45 * _v44 * Math.pow(_v18, _v44 - 1); grad__v44 += grad__v45 * Math.pow(_v18, _v44) * Math.log(_v18);
    grad__v39 += grad__v43; grad__v42 += grad__v43;
    grad__v40 += grad__v42 * _v41; grad__v41 += grad__v42 * _v40;
    grad__v29 += grad__v41 / _v33; grad__v33 -= grad__v41 * _v29 / (_v33 * _v33);
    grad__v13 += grad__v40 / _v17; grad__v17 -= grad__v40 * _v13 / (_v17 * _v17);
    grad__v35 += grad__v39; grad__v38 += grad__v39;
    grad__v36 += grad__v38 * _v37; grad__v37 += grad__v38 * _v36;
    grad__v24 += grad__v37 / _v33; grad__v33 -= grad__v37 * _v24 / (_v33 * _v33);
    grad__v7 += grad__v36 / _v17; grad__v17 -= grad__v36 * _v7 / (_v17 * _v17);
    grad__v18 += grad__v35 * _v34; grad__v34 += grad__v35 * _v18;
    grad__v20 += grad__v34 / _v33; grad__v33 -= grad__v34 * _v20 / (_v33 * _v33);
    grad__v32 += grad__v33 * 0.5 / Math.sqrt(_v32);
    grad__v27 += grad__v32; grad__v31 += grad__v32;
    grad__v29 += grad__v31 * _v30 * Math.pow(_v29, _v30 - 1); grad__v30 += grad__v31 * Math.pow(_v29, _v30) * Math.log(_v29);
    grad__v28 += grad__v29; grad__v12 -= grad__v29;
    grad__v22 += grad__v27; grad__v26 += grad__v27;
    grad__v24 += grad__v26 * _v25 * Math.pow(_v24, _v25 - 1); grad__v25 += grad__v26 * Math.pow(_v24, _v25) * Math.log(_v24);
    grad__v23 += grad__v24; grad__v6 -= grad__v24;
    grad__v20 += grad__v22 * _v21 * Math.pow(_v20, _v21 - 1); grad__v21 += grad__v22 * Math.pow(_v20, _v21) * Math.log(_v20);
    grad__v19 += grad__v20; grad__v1 -= grad__v20;
    grad__v2 += grad__v18 / _v17; grad__v17 -= grad__v18 * _v2 / (_v17 * _v17);
    grad__v16 += grad__v17 * 0.5 / Math.sqrt(_v16);
    grad__v10 += grad__v16; grad__v15 += grad__v16;
    grad__v13 += grad__v15 * _v14 * Math.pow(_v13, _v14 - 1); grad__v14 += grad__v15 * Math.pow(_v13, _v14) * Math.log(_v13);
    grad__v11 += grad__v13; grad__v12 -= grad__v13;
    grad__v4 += grad__v10; grad__v9 += grad__v10;
    grad__v7 += grad__v9 * _v8 * Math.pow(_v7, _v8 - 1); grad__v8 += grad__v9 * Math.pow(_v7, _v8) * Math.log(_v7);
    grad__v5 += grad__v7; grad__v6 -= grad__v7;
    grad__v2 += grad__v4 * _v3 * Math.pow(_v2, _v3 - 1); grad__v3 += grad__v4 * Math.pow(_v2, _v3) * Math.log(_v2);
    grad__v0 += grad__v2; grad__v1 -= grad__v2;
    gradient[gradientIndices[0]] += grad__v0;
    gradient[gradientIndices[1]] += grad__v1;
    gradient[gradientIndices[3]] += grad__v5;
    gradient[gradientIndices[4]] += grad__v6;
    gradient[gradientIndices[6]] += grad__v11;
    gradient[gradientIndices[7]] += grad__v12;
    gradient[gradientIndices[9]] += grad__v19;
    gradient[gradientIndices[11]] += grad__v23;
    gradient[gradientIndices[13]] += grad__v28;
    gradient[gradientIndices[27]] += grad__v105;
    gradient[gradientIndices[28]] += grad__v109;
    gradient[gradientIndices[29]] += grad__v113;
    gradient[gradientIndices[36]] += grad__v150;
    gradient[gradientIndices[37]] += grad__v154;
    gradient[gradientIndices[38]] += grad__v158;
    return _v293;
  
}